[
  {
    "title": "Se ninguém pediu, por que você tá construindo? 😅",
    "link": "https://www.tabnews.com.br/aleph/se-ninguem-pediu-por-que-voce-ta-construindo",
    "content": "Você já parou pra pensar na quantidade absurda de coisas que a gente constrói sem nunca ter perguntado se alguém realmente precisava delas?\nEu já cometi esse erro várias vezes:\n\nPassar semanas (ou meses!) desenvolvendo algo incrível… que ninguém pediu.\nMe empolgar com ideias brilhantes e super completas sem validar antes.\nFicar frustrado depois, achando que o problema era a ideia, o mercado ou qualquer coisa, menos eu mesmo.😅\n\nMas descobri uma coisa importante no meio desse processo todo:\nO jeito mais rápido de perder tempo é construir algo que ninguém quer.\nA validação não é só um detalhe \"legalzinho\" pra depois que você já gastou tempo e dinheiro. É o ponto zero de qualquer coisa que você for fazer.\nRecentemente comecei a pensar se não existe um jeito mais fácil de fazer essa validação inicial. Algo que me ajudasse a conversar com pessoas certas, testar as ideias e entender se alguém realmente se importa, sem precisar sofrer tanto com esse processo.\nE você? Concorda? Discorda? Já construiu algo que ninguém queria também? Tem algum jeito mais fácil que você usa pra validar ideias hoje em dia? Me conta aí nos comentários.",
    "comments": [
      "Como diria o poeta, \"nem discordo, nem concordo, muito pelo contrário\".\nPor um lado, se você que construir algo para vender. O método científico — teoria, hipótese, experimento, validação — é o caminho. No mundo das startups, isso se chama botar o MVP para rodar, que, aliás, tem um nome péssimo, porque o MVP não é um produto, é um experimento. Steve Blank tem uma metodologia brilhante para isso, o Customer Discovery, que basicamente diz: \"Saia do prédio e fale com pessoas reais antes de construir.\" LEIA O LIVRO!!!\nMas, por outro lado, sou obrigado a discordar. Às vezes, a melhor forma de construir algo realmente revolucionário é simplesmente porque você quer. E fodasse o mundo.\n\nLinus Torvalds não validou o Linux antes de começar. Ele só queria um sistema operacional que funcionasse no PC dele.\nTim Berners-Lee não fez pesquisa de mercado antes de criar a World Wide Web. Ele só queria compartilhar documentos com outros cientistas.\nSantos Dumont não perguntou se alguém queria o avião. Ele só queria voar.\n\nEnfim...as vezes engenharia vira pura arte.\n\nPicasso não perguntou se alguém queria ver cubismo. Ele só pintou.\n",
      "\nOntem o que mais aconteceu comigo foi isso!! E vou guarda essa frase comigo O jeito mais rápido de perder tempo é construir algo que ninguém quer. Realmente é o que resumiu meu dia super improdutivo ontem kkkk.\n",
      "Pra não cair na armadilha de \"perder tempo construindo algo que ninguém quer\", eu costumo só iniciar um projeto se, de antemão, ele tiver pelo menos alguma serventia para mim.\nÉ claro que o ganho básico e natural para não sentir que perdeu tempo é o conhecimento adquirido. Mas é bem mais gratificante, em vez de apenas obter aprendizado, fazer isso enquanto constrói algo útil.\nPor isso, se não tenho certeza de que servirá para alguém, preciso ter absoluta certeza de que será algo que resolve um problema meu. Assim nunca será perda de tempo.",
      "\nSteve Blank tem uma metodologia brilhante para isso, o Customer Discovery, que basicamente diz: \"Saia do prédio e fale com pessoas reais antes de construir.\" LEIA O LIVRO!!!\n\nGostei da sugestão! Vou colocar no topo da minha lista.\n\nÀs vezes, a melhor forma de construir algo realmente revolucionário é simplesmente porque você quer. E fodasse o mundo.\n\nÉ interessante essa perspectiva! Ao mesmo tempo, há outros caminhos que não envolvem criar algo revolucionário. Por exemplo, àqueles que envolvem construir algo minimamente sustentável ao longo dos anos com o objetivo de conseguir financiar outros sonhos (que não necessariamente envolvam criar um negócio).",
      "A gente também adquire conhecimento desenvolvendo essas coisas que ninguém pediu.",
      "Com certeza! E muito. Ao mesmo tempo, é importante ter as expectativas alinhadas desde o começo. Por exemplo, \"estou criando isso para aprender ou no fundo tenho a expectativa de isso virar um negócio?\". Se a expectativa for transformar em um negócio, a validação da ideia deveria ser o primeiro passo antes de qualquer linha de código.",
      "Vc nunca faz algo inútil! nao perderia por algo inútil! existem coisas mais inutil do que fazer algo que realmente esta fazendo! sua dedicação tem um propósito! agora o resultado pode ser frustrante se vc esta fazendo algo pra agradar alguem enquanto esse alguem nem sabe que vc existe! entao faça algo util pra vc! perca tempo pra vc! ajude quem realmente precisa, realmente sabe que vc existe e é capaz..",
      "Motivação é algo importante.\nPor que programar/desenvolver algo, né ?\nDe onde vem a encomenda ? Muitas vezes vem de um cliente interno."
    ],
    "audio_path": "/tmp/Se ninguém pediu, por que você tá construindo? 😅.mp3",
    "summary": {
      "summary": "O artigo aborda a questão de construir produtos ou projetos sem validação prévia, questionando a prática comum de investir tempo e recursos em algo que ninguém necessariamente precisa. O autor compartilha experiências pessoais de frustração ao desenvolver ideias não validadas e propõe a busca por métodos mais eficientes para testar a receptividade do público antes de iniciar a construção. A discussão nos comentários se divide entre a importância da validação para projetos com fins comerciais, seguindo metodologias como Customer Discovery e MVP, e a perspectiva de criar algo por puro interesse pessoal, mesmo que não haja demanda de mercado, citando exemplos de projetos revolucionários que surgiram da iniciativa individual. Há um consenso de que o conhecimento adquirido no processo de desenvolvimento, mesmo de projetos não validados, é valioso. A importância de alinhar as expectativas (aprendizado vs. negócio) e a motivação pessoal no desenvolvimento de projetos também são pontos ressaltados.",
      "keywords": [
        "validação de ideias",
        "MVP",
        "Customer Discovery",
        "inovação",
        "necessidade do cliente",
        "desenvolvimento pessoal",
        "motivação"
      ]
    }
  },
  {
    "title": "[PITCH] Seu SaaS ou Micro-SaaS não precisa estar no Product Hunt...",
    "link": "https://www.tabnews.com.br/sideantunes/pitch-seu-saas-ou-micro-saas-nao-precisa-estar-no-product-hunt",
    "content": "Introdução\nOpa, galera, tudo bem? Eu sou o Antunes, no dia 16 de Outubro de 2024 eu fiquei na 15º de produtos do dia no Product Hunt!. Eu acabei me esquecendo de citar isso na minha publicação de 1 ano rodando um SAAS, então estou trazendo essa nova publicação para contar um pouco mais sobre o Product Hunt e complementar um video que publiquei ontem sobre os resultados que obtive estando nessa possição no youtube. Aqui eu vou contar um pouco melhor como funciona o Product Hunt para você que não conhece.\nComo funciona o Product Hunt\nO que é esse tal de Product Hunt? É simples: uma plataforma onde você agenda o lançamento do seu produto e, no dia escolhido, ele vai pro ar competindo com outros lançamentos. A comunidade – cheia de devs, indie hackers e curiosos do mundo todo – dá upvotes, e quanto mais votos, melhor sua posição no ranking diário. Se você conseguir uma quantidade legal de votos, pode até aparecer na página principal e ganhar uma visibilidade zarra!. Em 2024, por exemplo, produtos como o Cursor (aquele editor com IA embutida que o Lucas Montano ama) e o Supabase foram lançados lá e até viraram \"produto do ano\". É coisa grande, tipo startup que fatura milhões depois!\nMas tem pegadinha: o timing é crucial. Você concorre com outros produtos do mesmo dia, e, se não tiver uma estratégia, seu SaaS pode afundar rapidinho. Pra ter sucesso, você precisa de uma comunidade pronta pra votar nas primeiras horas – eu, por exemplo, divulguei no Twitter e no WhatsApp pra garantir uns 20 votos iniciais no Logaflow. Sem isso, é tipo lançar e rezar. E outra: como é em inglês e global, pode ser um tiro no pé se seu produto ainda tá cru ou é nichado pro Brasil. Então, antes de se jogar, tem que ter preparo – uma landing page matadora, um pitch claro e um público engajado.\nTabNews > Product Hunt\nAgora, deixa eu te dar uma dica que aprendi na quebrando a cara: pra quem tá começando, o TabNews é mil vezes melhor que o Product Hunt. Por quê? Aqui é uma comunidade brasileira cheia de programadores como você – curiosos e dispostos a testar ideias novas, especialmente se for algo de TI, como o meu Logaflow. No TabNews, você não precisa de upvotes pra aparecer; é só postar seu pitch, contar o problema que seu produto resolve e pedir feedback. Um dos meus primeiros assinantes teve como origem um post aqui no tabnews.\nEnquanto o Product Hunt é pra quem já tem um produto redondo e uma comunidade pronta, o TabNews é pra quem tá construindo do zero. Aqui você fala direto com quem entende código, pega sugestões técnicas e encontra seus primeiros usuários sem a pressão de competir com o mundo. Minha experiência com o Logaflow no Product Hunt me ensinou que, sem uma base sólida (tipo uma landing page que converte), você só queima cartucho. Então, testa no TabNews primeiro, ajusta o que precisa e deixa o Product Hunt pra quando você tiver preparado pra brilhar globalmente.\nO que eu ganhei ficando na 15º possição de produtos do dia no PH?\nNo meu vídeo, eu conto tudo: os erros que cometi (como lançar um \"balde furado\"), o que aprendi e por que o TabNews é o lugar pra você começar. Clica aqui pra assistir: Link pro vídeo no YouTube. Se curtir, deixa um like e comenta lá o que achou – e, claro, se inscreve no canal pra não perder os próximos relatos de indie hacker!\nValeu, pessoal! Qualquer dúvida ou ideia, manda aqui nos comentários que eu te ajudo!",
    "comments": [
      "Postei o pitch do meu micro SaaS aqui e no reddit (www.anaclara.app) e tive um resultado incrivel. Meu post no reddit chegou a 56k impressoes, enquanto tive que pagar 100 reais de google ads (teste) para ter 2k impressoes.\nA experiencia de compartilhar sua jornanda com outros devs e ouvir feedback de outros brasileiros é algo que o product hunt nao consegue entregar. Go TabNews!",
      "Quais comunidades você é membro no Reddit? eu engajo lá respondo posts, fiz alguns posts e não deu absolutamente nada kkkkk no máximo umas 30 impressões.",
      "Principalmente no r/devBR, onde consegui esse numero de impressoes. Alguem repostou no r/MeuNegocio tambem, e as vezes entro no r/empreendedorismo tb",
      "A criação de conteúdo através de post é o que também esta se saindo melhor para mim",
      "Na verdade, seu SaaS irá fracassar caso bao tenha dinheiro, e muito, para investir em marketing. Ainda mais essas ideias que estou vendo por aí. Robozinho de whatsapp, agendas diversas, site de Papai Noel, cartão virtual e por aí vai.",
      "concordo que sem investimento em marketimg é muito dificil espalhar teu produto por ai. Recomendo voce da uma olhada no meu produto, o Logaflow é um pouco mais complexo.",
      "ótima análise, valew por compartilhar a sua esperiência!",
      "muito obrigado pelo apoio",
      "Ótimo Gabriel, parabéns!",
      "opaaa vlwww meu velho"
    ],
    "audio_path": "/tmp/[PITCH] Seu SaaS ou Micro-SaaS não precisa estar no Product Hunt....mp3",
    "summary": {
      "summary": "O artigo discute a experiência do autor ao lançar um SaaS no Product Hunt e compara essa experiência com o uso do TabNews. O autor argumenta que, para produtos em estágio inicial ou com foco no mercado brasileiro, o TabNews é uma plataforma mais vantajosa devido à sua comunidade de desenvolvedores e à facilidade de obter feedback direto. Ele enfatiza que o Product Hunt exige um produto mais maduro e uma estratégia de lançamento bem definida, incluindo uma landing page eficaz e uma comunidade engajada para garantir votos iniciais. A discussão nos comentários complementa essa visão, com outros usuários compartilhando suas experiências com diferentes plataformas, como o Reddit, e concordando com a importância do marketing e do engajamento com a comunidade para o sucesso de um SaaS. Alguns comentários também ressaltam a dificuldade de se destacar no mercado sem investimento em marketing, especialmente para ideias consideradas comuns.",
      "keywords": [
        "SaaS",
        "Product Hunt",
        "TabNews",
        "marketing",
        "comunidade",
        "feedback",
        "lançamento de produto"
      ]
    }
  },
  {
    "title": "Cursos e Faculdades não são a melhor forma de aprender",
    "link": "https://www.tabnews.com.br/pedrooIl/cursos-e-faculdades-nao-sao-a-melhor-forma-de-aprender",
    "content": "Estava me questionando esses dias se fazer um curso e uma faculdade hoje em dia é só para ter um diploma / certificação?\nPois sinto que os \"professores\" de tecnologia só nos ensinam mais do mesmo no quesito téorico ou seria uma impressão? Pois a bolha Tech cresceu tanto e surgiu tantos cursos e faculdades por aí que sinto foram perdendo a qualidade ou só foram dando um Ctrl C Ctrl V em todos os outros cursos que existem.\nTambém tem o fato de que na maioria das vezes só ensinam para nós (iniciantes) a escrever um código e entender o mínimo da lógica.\nNo segundo semestre da faculdade lembro do meu professor ensinando C ou C++ (n sei ao certo), ele era gago o que atrapalhava um pouco o desempenho dele e em dois semestres ele só ensinou a como definir uma variavel e mostrar ela na tela, o resto das aulas ele ficou gaguejando e falando sobre as bibliotecas (2 no caso), e não passava exercicios ou coisa do tipo.\nClaro que também tem o fato que eu não estava numa federal da vida, e sim numa privada de \"bairro\".\nVi muitos depoimentos do curso do Deschamps, e acho que vale a pena o investimento, só estou sem $ por enquanto.\nMas fico me perguntando do que vai ser dos profissionais que decidem se formar na área e escolhem uma faculdade como a que escolhi, seja por falta de dinheiro ou por não ter estudado o suficiente para passar em uma melhor, realmente sempre ouvi dos colegas que temos que buscar por conta própria, mas eu não via eles fazendo isso, inclusive tinha um colega que não sabia extrair uma pasta do Windows.\nEnquanto isso eu em uma entrevista de estágio, não fui aceito sem motivos pois nem deram um feedback (acho que já virou normal kkk)\nSinto que faço minha parte, porém nem sou aceito na vaga pois estão cobrando requisitos de Jr em estágio.\n(Foi um desabafo continuo na luta dos estudos para tentar um estágio ou quem sabe uma vaga de Jr futuramente)",
    "comments": [
      "Na minha opinião o currículo, diploma, certificado, experiencia, é uma pineira serve pra separar quem não vai dar trabalho, serve pra quem vai trabalhar direitinho! A melhor forma de Aprender é desenvolver projetos, conhecer recursos novos, interagir com outras pessoas. Estava vendo que cada empresa tem uma necessidade diferente, seria impossivel tender para as necessidades de cada empresa. o que aconselho é fique por dentro da atualidade, muitas empresas estão completamente desatualizadas!",
      "Olha, primeiro espero q entenda minha crítica construtiva, pois eu sempre busco falar de forma sincera, objetiva e realista. Mas tem gente q não entende e acham q estou desejando mal a pessoa, e está longe disso.\nBom, primeiro eu digo q recusa de emprego é normal, eu já tive várias qndo busquei estágio, várias qndo tentei o primeiro emprego oficial, e várias qnto mudei de área dentro da programação. Sem contar os empregos fora da programação. E mtos deles não dão feedback ou dão desculpas apenas para não dizer o pq.\nMas ao meu ver, o problema q vc cita não é a faculdade/curso q vc fez, pois quem baseia a seleção por faculdade/curso, normalmente eles já filtram antes mesmo de te chamar para o processo seletivo, afinal custa menos para eles já cortarem do processo seletivo. Então se eles te chamaram pra entrevista, é bem provável q te eliminaram não por causa da faculdade/curso q vc fez, mas sim por causa q vc não sabe se vender.\nPra qqr emprego q vc procurar da nossa área, vc tem 2 alternativas para conseguir aquela vaga. Ou vc é indicado, ou vc precisa ser o melhor do que os outros.\nA indicação (o famoso quem indica, ou QI) é simples de entender, precisa de alguém dentro da empresa ou alguém próximo as pessoas daquela empresa recomendam vc para estar lá. Então por ser indicado, é mais fácil ser selecionado para aquele processo seletivo/vaga. Mas isso não significa q irá conseguir, pois depende mto das decisões deles.\nAgora sobre 'vc precisa ser melhor q os outros' acontece no famoso processo seletivo. O próprio nome já diz, um processo para selecionar, nesse caso, alguém para aquela vaga. É nesse ponto q existem várias etapas para filtrar as pessoas e acharem a pessoa ideal q servirá para trabalhar junto com eles. As empresas sempre buscam pelos melhores para preencher as vagas deles, e isso sempre aconteceu e sempre acontecerá, afinal vc acha q eles gostariam de contratar um zé ninguém para preencher aquela vaga, custando a produtividade deles? Pois é. Então por isso q digo q se a empresa não te chamou, é bem provável q vc não é interessante para elas.\nE como vc se torna interessante para elas? Simples, tem q saber se vender. Se vc não sabe se mostrar q vc é apto para aquela vaga ou até se vender de forma errada, elas não vão estar interessada em vc. A não ser q o intuito da empresa seja te explorar, ai é outro assunto e espero q vc não caia nessas vagas.\nEntão assim, seu post está jogando a culpa totalmente na faculdade/cursos pelo seu fracasso de não entrar na vaga, o q acho q isso é completamente equivocado. Repense melhor sobre isso e principalmente, melhore a si msm, tanto em habilidades pessoais (soft skills) e conhecimentos técnicos (hard skills). Infelizmente esse mundo de emprego é uma competição, e até onde sei, a competição para iniciantes está alta recentemente, então se vc não souber se vender, é óbvio q vc não se destacará quando comparando com outros concorrentes.\nBom, então como eu melhoraria essa parte de me vender? Tem várias maneiras.\n\nDa parte social seria: A maneira de falar, a maneira de vestir, a maneira de se comportar durante a entrevista, se vc mente durante a entrevista ...\nDa parte de conhecimento seria: Como vc monta seu cúrriculo, se seus conhecimentos são compatíveis com o q eles querem (infelizmente isso acontece), como vc faz seu portfólio, quais são seus projetos do portfólio, como vc fez o projeto do processo seletivo ...\nDa parte de negociação: sua disponibilidade (tipo, ir morar em outra cidade), o valor do salário pretendido ...\nTambém recomendo dar uma pesquisada e ver como procurar por QI. E claro, achar essas pessoas. Isso ajuda mto hj em dia.\n\nE se vc contra-argumentar q isso é só um estágio, mano... competição existirá em qqr momento da carreira, infelizmente é essa a realidade. Melhore a si mesmo e boa sorte com a caçada por um estágio.",
      "Po cara, muito obrigado por ajudar, entendi totalmente a crítica construtiva e deu um norte pra aprender outros metódos de estudo que não tinha pensado antes, valeu pelo ponto de vista e pela força <3",
      "Só eu já respondi sobre isso várias vezes: https://www.google.com/search?as_q=maniero+faculdade&as_sitesearch=tabnews.com.br. Um dos links é a FAQ que eu fiz que explica muita coisa que a maioria deveria saber.\nInfelizmente hoje boa parte dos professores pegaram esse trabalho porque não conseguiram fazer nada melhor. Aprendem errado e ensinam errado, há muito pouco compromisso com sues alunos. Até tem professores bons, mas entre esses boa parte estão dando aulas por obrigação, eles querem se dedicar às suas pesquisas, e não ligam para os alunos, ainda mais que muitos estão chegando na faculdade sem base alguma para aprender corretamente, é até desperdício de recursos, eu os entendo.\nMuitos dos cursos livres ou cursos formais particulares só querem agradar o aluno, não há compromisso da educação dele, o objetivo do curso é não causar dor, desconforto ou sentimentos negativos na pessoa, porque ele está pagando e quer se sentir bem, ele não se importa em aprender de forma dura. Tem consumidor querendo isso e tem fornecedor ofertando, é igual drogas, o problema é o consumidor. Ensinar receita de bolo é mais fácil que ensinar a pessoa a entender e raciocinar. Até porque boa parte das pessoas foram acostumadas à receita de bolo, algo ue a IA vai tornar obsoleto cada dia mais.\n\nlembro do meu professor ensinando C ou C++ (n sei ao certo)\n\nCuriosa colocação. Já parou para pensar que pode não ser o curso o problema? Ainda que em seguida  mostre que havia um problema bem específico. e confirmação do que eu disse acima.\nSe você ler tudo o que eu te passei entenderá a diferença entre um curso bom e um curso que sabe se vender bem.\nO que será dessas pessoas que não estão aprendendo direito? Cada uma uma acontecerá uma coisa diferente, pode ser que se deem bem por sorte, por outras habilidades (políticas), podem nadar bem em momentos de vacas gordas, podem ir levando aos trancos e barrancos ganhando menos que uma faxineira, pode desistir da área, pode ficar sem viabilidade no mercado de trabalho, pode ter condições de não depender dessas coisas ruins, pode um monte de outras coisas.\nDar feedback real tem causado problemas para as empresas, elas preferem não fazer isso ou fazer disfarçadamente, omitindo a realidade, o que pode ser até pior. A pessoa precisa saber onde está errando para melhorar. Mas sabemos que algumas não sabem o que fazer quando recebem um bom feedback, é mais fácil dizzer que a outra pessoa está enganada (o que pode ser um fato, mas quem está começando não consegue avaliar isso bem, e tenderá ir pelo caminho da presunção ou algo parecido.\nEstão cobrando 3 anos de experiência (por exemplo) na vaga de estágio? Ou estão cobrando que a pessoa saiba todos os fundamentos bem e algumas ferramentas?\nA melhor forma de aprender depende de cada pessoa, há pessoas incríveis sem faculdade, mas isso é exceção. Há cada vez mais pessoas com um diploma na mão e são analfabetos funcionais.\nExistem cursos que são fraudes.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Logo depois que fiz o post, eu vi um comentário seu em algum post também que tinha a FAQ, pô só aquilo já ajudou bastante e abriu minha visão mesmo, sinto que todo o pessoal aqui é muito melhor que todos os professores que já tive e fico feliz por isso, por ter uma comunidade que trabalha na área e manda a real, obrigado por isso cara de coração mesmo <3",
      "Já fiz faculdade EAD(Que não me agregou tanto, aprendi mais fora dela do que dentro dela), já fiz vários cursos também, inclusive um presencial onde o foco é realmente codar e esse foi o que me aproximou mais da realidade de um programador. Mas, ao meu ver o problema desses cursos e faculdades hoje em dia está na forma como passam os ensinamento, muitas as vezes as pessoas terminam uma faculdade sem nem saber como funciona um real projeto de tecnologia, as etapas/ processos são passadas em teoria, mas a real prática de como seria programar em uma empresa ou até mesmo um projeto freelancer eles não passam. \"Ah mas isso é adquirido através de estágio\", beleza, mas nem todos conseguem um estágio. Esses cursos que ensinam a fazer to-do-list para mim não agregam em quase nada, pois não mostram a realidade de um programador da vida real e quando você chega para um processo seletivo onde você tem que ser um programador da vida real você não está preparado. Para mim o que falta nesses cursos de hoje em dia é mostrar como realmente se programa um software que poderia ser usado ou vendido na vida real(Não estou falando que eles tem que ensinar a criar um facebook ou spotify da vida, acho que deu para entender meu ponto).",
      "Sim, totalmente e concordo com isso, está cada vez mais dificil, mas vi um  video do Deschamps hj que abriu minha mentalidade de uma forma de estudo que nunca tinha feito antesMétodo de Estudo",
      "Meus 2 cents:\nExistem faculdades de 1a. linha e existem as \"UNI-Esquina\".\nUma faculdade de 1a. linha, presencial e paga, pode custar facil R$ 3k so de mensalidade fora o custos agregados.\nUma faculdade de 1a. linha publica, presencial, tambem tem a questao dos custos agregados (cursinhos pre-vestibular e custos de manutencao, as vezes sem conseguir trabalhar).\nUma faculdade UNI-Esquina custa R$ 150/mes um curso de ADS EAD.\nEh complicado comparar.\nQuanto ao fato das materias serem fracas ou nao - a realidade eh que mesmo em faculdades de 1a. linha isso as vezes acontece, mas ai normalmente a pressao junto a coordenacao eh maior (mas nao significa que mudancas acontecam e a frustracao eh mato).\nMas tambem nao vejo muito por onde correr - eh uma situacao ocasionada por diversos fatores agindo simultaneos: explosao da tecnologia, expansao do EAD, um anseio coletivo por ugencia na formacao com expectativa de melhoria na condicao social, degradacao da formacao de professores, enfraquecimento do poder aquisitivo alunos e docentes, concentracao/oligopolio de grupos educacionais.\nMas nao gosto de sentar e ficar ruminando \"no meu tempo aprendia-se mais\" ou semelhante - se a situacao atual eh esta, entao eh ver o que pode ser feito a curto prazo.\nSempre recomendo fazer faculdade mesmo sendo UNI-Esquina EAD, fazer o curso mais rapido possivel (2.5 ou 3 anos), pegar o diploma e engatar uma (ou mais) pos-graduacao. Mesmo que voce nao va trabalhar na area de TI depois, o diploma+pos faz diferenca em qualquer processo seletivo (e mesmo em diversas situacoes para o resto da vida).",
      "Sim, eu já não vejo a hora de acabar o ADS logo e começar uma Pós para me especializar em algo mais profundo, só não sei oq ainda, mas creio que esteja no caminho para descobrir, valeu <3",
      "\nClaro que também tem o fato que eu não estava numa federal da vida, e sim numa privada de \"bairro\".\n\nQualquer faculdade que não seja pública vai se preocupar mais em ter você pagando que ensinar com qualidade.\nA minha era famosa por 70% da turma desistir no primeiro semestre. Fazia uma turma com mais de 150 pessoas pra 30 continuarem. Era excelente até começarem as crises e baixa entrada de alunos na faculdade.\nHoje a faculdade se esforça ao máximo para agradar todos os alunos, manter todos pagantes e não ter nenhum desistente. A qualidade está beirando a nulo.\nVá atrás de realmente aprender, de conteúdo de qualidade, não de comprar cursos que apenas querem teu dinheiro.\nPelos relatos o curso.dev é um ótimo exemplo disso, o Filipe se importa muito em entregar o melhor conteúdo e a preocupação maior não é apenas vender",
      "Sim, a qualidade realmente deixa muito a desejar, um dos meus planos é juntar dinheiro e pegar o curso do Filipe, parece ser muito massa mesmo.",
      "Meus 2 cents:\nDepende da faculdade, depende do seu nível de conhecimento, essa pergunta é uma com vários dependes que não da pra responder de uma maneira simples, no meu caso por exemplo aprendi quase nada nas matérias até o 4° período, onde tive Estrutura de Dados e só o fato de codar as estruturas e de fato pensar como fazer me ajudou em um geral com algoritimos inclusive no meu trabalho (Fullstack Junior).\nAcredito que a faculdade pra programação nunca foi para aprender as ultimas técnologias, se for analisar nunca foi necessário ter um professor para aprender código, nas poucas vezes que peguei livros de programação de php me pareceu sempre extremamente completos e sem necessidade de ter alguém descascando o conteúdo pra você.\nMas isso não torna a faculdade dispensável, o contato que você tem com outras pessoas no quesito técnico e social faz a experiência valer a pena, fora o networking, já que vai estar em um ambiente com mais 30 e poucas pessoas que almejam o mesmo que você.\nAlém disso a faculdade ainda é mais bem vista, se tiver um candidato com diploma e um sem, muito provavelmente o com vai conseguir a vaga, até porque a faculdade sempre consegue dar uma base mais geral pra pessoa, mesmo que ela não seja o melhor dev já se supõe que ele vai ter uma bagagem mais abrangente.",
      "Poxa, obrigado pelo ponto de vista, realmente faz sentido em questão de um candidato com e o sem diploma. Valeu pelo ponto de visto <3"
    ],
    "audio_path": "/tmp/Cursos e Faculdades não são a melhor forma de aprender.mp3",
    "summary": {
      "summary": "A discussão gira em torno da eficácia dos cursos e faculdades na área de tecnologia, questionando se o diploma é o principal objetivo. O autor original relata uma experiência insatisfatória em uma faculdade privada, sentindo que o ensino é superficial e pouco prático. Nos comentários, alguns usuários concordam que a faculdade nem sempre prepara para o mercado de trabalho, e que a busca por conhecimento deve ser contínua e independente. A importância de desenvolver projetos e interagir com outros profissionais é ressaltada. Outros comentam que o problema pode estar na forma como o profissional se 'vende' e que o mercado está cada vez mais competitivo. Há também quem defenda a importância do diploma, mesmo que o curso seja considerado fraco, pois ele ainda é um diferencial em processos seletivos. A relevância do networking e das habilidades sociais também é mencionada. A discussão aponta para a necessidade de equilibrar a formação acadêmica com a experiência prática e o desenvolvimento de habilidades de comunicação e marketing pessoal.",
      "keywords": [
        "faculdade",
        "cursos",
        "mercado de trabalho",
        "desenvolvimento",
        "estágio",
        "aprendizado",
        "qualidade do ensino"
      ]
    }
  },
  {
    "title": "[DISCUSSÃO] O fim do front-end? Empresa não contrata mais devs front-end e apela para IA",
    "link": "https://www.tabnews.com.br/DevCasten/discussao-o-fim-do-front-end-empresa-nao-contrata-mais-devs-front-end-e-apela-para-ia",
    "content": "Bom dia Devs,\nEstava hoje, visualizando o feed do meu LinkedIn, e me deparei com o seguinte post da empresa \"Dotted.ai\", que dizia o seguinte:\n\"\n🚀Tchau, desenvolvedores front-end! Olá, Inteligência Artificial! 🤖\nNa Dotted.ai, tomamos uma decisão ousada: não contratamos mais devs front-end. Isso mesmo. Com ferramentas como V0.dev, Cursor, Copilot e ChatGPT, conseguimos entregar interfaces de alta qualidade sem precisar de uma equipe dedicada só para isso.\nA IA gera código, ajusta componentes e nos permite focar no que realmente importa: negócio e experiência do usuário. Claro, ainda precisamos de bons engenheiros para revisar, integrar e garantir a qualidade. Mas a era do desenvolvedor escrevendo linha por linha de código está ficando para trás.\nSe você ainda acha que “IA nunca vai substituir devs”, talvez seja hora de reavaliar. O mercado está mudando rápido. Quem não se adapta, fica para trás.\nO que vocês acham? Estamos errados? Ou essa é a nova realidade do desenvolvimento de software?\n-Adalberto Calonego Jr.\nFundador e CEO da Dotted\n\"\"\"\nSinceramente, não sei o que pensar sobre, qual a opnião de vocês devs?",
    "comments": [
      "Eu vou falar disso porque ele é mais sério do que as pessoas estão enxergando, e sei que muitos negarão, ficarão revoltados porque não foi assim que a pessoas treinou o erro a vida toda, conforme eu sempre falo.\n\nPrimeiro, eu sempre falei que tem muita coisa sendo feita errada na nossa área. Boa parte da falta de profissionais existe por causa da falta de profissionais realmente qualificados. Então profissionais, muitas vezes experientes, principalmente em quantidade, muitos que são CTOs de empresas enormes, que conseguiram subir meteoricamente por causa do ambiente que estava e suas habilidades políticas, nunca se tornaram bons engenheiros, nunca entenderam completamente sua profissão, e sempre fizeram a tal da modinha, ou seja, apenas repetiram o que \"todo mundo\" está falando para fazer. Essa pessoa nunca tentou criar algo realmente novo, nunca foi atrás dos assuntos que estão em moda, não pensou fora da caixa, e sem entender totalmente todas as técnicas, os conceitos e sem saber aplicar adequadamente para produzir real inovação, essa pessoa só reproduz o erro da maioria.\nVeja bem, essa pessoa tem algum mérito, mas falta algo para dizer que essa pessoa é engenheiro de software de verdade. Ela até é, mas só pra reproduzir coisas. E isso acontece em várias engenharias, na civil mesmo, se vê muito desperdício, inclusive surgem técnicas novas muito melhores e décadas depois tem um monte de engenheiro que não conhece ou não sabe aplicar ou acha que aquilo não é bom. Se a pessoa não tiver o espírito de engenheiro ela só vai copar coisas e se tem muitas coisas erradas, será isso que ela copiará. A pessoa com méritos ainda alcançará resultados importantes que trará valor e justamente por isso cega quem contrata e a si próprio.\nUm exemplo que falo muito como as pessoas complicam muito a base de código para seguir certas regrinhas que leem por aí e que não traz benefício algum no caso dele ou não traz porque não aplica do jeito certo. A pessoa só segue o que foi dito para ela.\nUm exemplo é como aplicam arquitetura limpa, que de limpa não tem nada, ela é extremamente suja. Alguns problemas podem exigir isso, mas boa parte dele, provavelmente a maioria, não precisa, pelo menos não totalmente. A pessoa aplica, torna a base de código mais complicada e convive com isso a vida inteira e sofre como algo inerente ao trabalho. Tem trabalho repetido aos montes por causa disso.\nO mesmo vale para SOLID, DDD, microsserviços, e uma lista incomensurável de coisas que podem ser úteis em cenários bem específicos e geralmente acompanhada de aplicação correta, de uso de ferramentas extras, que provavelmente você terá que desenvolver para facilitar o trabalho e não virar um fardo enorme.\nEsse é um assunto que me interessa muito e o primeiro vídeo do meu canal, que será bem longo e provavelmente sempre será o vídeo mais longo do canal, que se baseará na minha palestra de maior sucesso, fala muito sobre essa complexidade criada artificial e erroneamente, em nomes de “boas práticas”, que se tornam péssimas.\nOu seja, há muito tempo, certas tarefas já deveriam estar muito automatizadas e não feitas por humanos. Você modelar o backend e depois refazer tudo no frontend é um dos enormes desperdícios que já vi, junto com outras coisas que possuem camadas que são redundantes e de certa forma violam o DRY, o princípio que mais deveria ser seguido, inclusive boa parte do trabalho do programador em qualquer coisa, é justamente aplicar algo parecido com DRY nas informações dos outros, e ter tudo centralizado e você pode pegar o que precisa quando quiser do jeito que quiser sem risco de estar escapando algo ou gerar inconsistências quando coloca uma  informação nova. Há muito tempo deveria ter só alguém para fazer a base estilística, a experiência do usuário e a melhor adequação dessa UI para o negócio, deveria ser feito por poucas pessoas e com trabalho mais no início para colher frutos depois e praticamente ter uma só pessoa cuidando disso (em alguns casos zero, em outros um pouco mais, depende do projeto).\nEu já nem gosto de usar os termos que usei, mas quis acompanhar a postagem original. Eu sou o chato que cobra as pessoas a usarem os termos corretos, porque isso ajuda a pessoa a pensar de forma correta, treina o acerto e não o erro. Quase sempre que a pessoa fala em frontend ela está na verdade falando de UI. E quase sempre é uma UI web, ela não está falando de outras que existem, ela até acha que se falar frontend (UI ou não) certamente será web, o que não é verdade. Inclusive com tudo o que eu falei acima, fazer para entregar UI para web ou outras formas, em plataformas diferentes se torna muito mais fácil, depois do investimento inicial.\nÉ claro que nem todo projeto comporta isso, mas geralmente ele deve ser feito de forma muito simples mesmo, e em alguns casos a IA pode ajudar um pouco melhor, mas são projetos throw away ou algo muito isolado.\nEu já falei algumas vezes que apesar de mais de 40 anos de experiência na área, eu trabalhei em pouco mais de meia dúzia de projetos, que eu prefiro chamar de produtos, inclusive por isso tinha que ficar anos em cada um, a maioria eu peguei começado e depois que saí continuou evoluindo. Trabalhei em projetos diferentes, tive a sorte de trabalhar com alguns dos melhores engenheiros que já vi, world class mesmo, e trabalhei em necessidades muito diferentes. Curiosamente uma das que mais aprendi fazia tudo errado, então aprendi com os erros deles, mas a melhor parte é que eles aplicavam uma técnica que era muito usada em décadas passadas, mas com as modinhas ganhando força nos anos 90 elas foram deixadas de lado, não se tornou assunto popular e praticamente parou de ter uso. Algumas pessoas consideram até que isso gera complexidade. E é verdade, mas é uma que corta várias outras complexidades. Eu costumo dizer que a maioria das pessoas fala em escrever código que facilite a manutenção, mas se orgulha de ter trabalhado em dezenas ou centenas de projetos, em alguns casos em menos de uma década de experiência. O que esta pessoa entende de manutenção? Ela só entende o que ela lê ou vê no Youtube.\nTem jeitos melhores de fazer e dá para criar projetos enormes de forma mais eficiente para os programadores e ter equipes mais reduzidas, que até ganha também porque a redução do tamanho da equipe permite outra redução, é como aumentar a autonomia do carro elétrico diminuindo o peso e tamanho das baterias, a redução permite ter mais carga armazenada e vai precisar de menos carga para um range bom porque o carro está mais leve.\nAlgo que eu não falei diretamente é que a forma como se desenvolve software hoje gera muita dívida técnica, a maioria que as pessoas não percebem.\n\nCuriosamente citei a mesma pessoa no mesmo artigo (que vou desenvolver mais no meu blog/canal, e quem sabe um dia eu crie um projeto aberto para ajudar as pessoas a inovarem e melhorarem sua base de código e eficiência de desenvolvimento).\nUsar a IA para isso, ou para muitas cosias em código, conforme qualquer pessoa profundamente sobre o assunto já antecipava, é mais uma geração de de dívida técnica. E já tem algumas pessoas bem respeitadas falando sobre isso, imagino que já tenha estudos sendo conduzidos.\nA IA está gerando um monte de código que você pode classificar como copy and paste, algo que todo mundo sempre falou para não fazer, mas hoje ouço bem menos, começou uma onda tão grande das pessoas saírem reaproveitando (sem DRY) códigos existentes, dele e de terceiros, que se parou de falar para evitar copiar e colar. Isso virou o normal.\nComeçou ter muito código repetido para dar manutenção. Muitas vezes código que a pessoa nem entende. e que não se adequa completamente, a pessoa então adequa o projeto ao que ela tem ali (o que pode ser uma decisão pragmática, mas quase sempre é simplesmente falta de conhecimento, experiência real qualitativa ou deseixo).\nA IA veio para piorar isso. Ela vai ajudar, mas vai perpetuar ainda mais a repetição de algo que deveria ser canônico. Porque a repetição até acontecia menos porque era caro, ficando barato vai explodir de fazer isso e as pessoas, se perceberem, vão se arrepender. Vou reforçar, a IA criará muita dívida técnica, a maioria das pessoas não tem ideia do buraco que estão se metendo.\nNão estou dizendo que a IA não ajudará em alguma coisa, mas ela produzirá muito problema a longo prazo, e saber equilibrar isso para que o saldo final seja positivo é difícil, ainda mais porque 100% das pessoas são inexperientes nisso. A IA precisa ser aliada, mas a falta de experiência dos humanos fará com que ela seja uma aliada infiel, e \"como todo corno\", será o último a saber.\nConclusão\nPara finalizar, a frase \"IA nunca vai substituir devs” só é dita por quem não entende do que está falando. Da mesma forma que tem muita gente que fala a besteira \"IA vai acabar com os programadores\". Parece a mesma coisa, mas a primeira significa que parte do trabalho dos programadores será semiautomatizado e vai diminuir a necessidades deles, mas não sabemos ainda o quanto vai precisar de mais depois porque foi feito tudo errado, precisamos de tempo e alguém que queira medir para não ficar só na impressão. A segunda frase indica mais quase o fim dos programadores, e isso não vai acontecer, mas só bons programadores vão sobrar, porque a parte mais mecânica, com IA ou outra técnica, vai quase desaparecer no longuíssimo prazo.\nSe adaptar é se tornar um desenvolvedor de primeira linha. Não vejo \"ninguém\" fazendo isso. Cada vez mais as pessoas só querem cursos rápidos, superficiais, que ensinam o erro, o popular, o fácil. Claro que aprender fazer prompts para ajudar onde deve é algo que deve se adaptar, mas a melhor adaptação é saber quando usar isso e quando tem soluções melhores, se adaptar é não cair na tentação do prêmio de curto prazo para pagar depois com altos juros a dívida que criou porque achou que a IA entrega tudo do melhor sem desvantagens.\nQuase todo mundo vai ignorar isso porque não é popular? Claro que sim.\nSobre criatividade\nA IA não ter criatividade nesse caso é feature. Já era um problema enorme as pessoas mostrarem suas veias criativas em desktop prejudicando a experiência. Em web é pior ainda, tanto que algumas pessoas não conseguem se adaptar a certos sites. A falta da criatividade não faz falta na maioria dos casos de UI. A criatividade deveria só ser usada para criar uma inovação efetiva e preferencialmente ser universalizada. Em UI algo muito importante é o usuário ficar confortável. Ele ter que aprender uma nova UI, geralmente mal-feita porque quem costuma ir por esse caminho são pessoas com baixa capacidade, é algo ruim.\nEu tenho rstrições ao uso de Bootstrap e afins, mas não por causa disso, esse é um ponto positivo dessas interfaces, o ideal seria existir um só.\nPor coincidência descobri isto esta semana: https://open-ui.org/.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "teve uma startup canadense que fez isso. Demitiu toda a sua equipe de decs pra usar IA em tudo, tudo mesmo. Fuas semanas depois ela estava contratando devs novamente. Na teoria tudo é bonito, mas na prática...",
      "\nfocar no que realmente importa: negócio e experiência do usuário.\n\nPara mim já perde credibilidade aqui, que acha que a interface não faz parte do negócio, e tem um impacto de peso na experiência do usuário.\nSempre tentam eliminar o Front-end, pois apesar de taxarem de \"fácil\", na verdade exige sim competência absurda para criar algo realmente funcional.\nEu consigo contar quantos sites eu já entrei e realmente eram bons no quisito interface, experiencia do usuário, otimização e afins...\nA minha opinião sobre é que o futuro dessa empresa pode ser nebulosa. Apesar de Front-end ser em sua grande maior parte interface, existem coisas que são feitas numa camada mais abaixo como validação, conexão de API, modularização, responsividade, testes, manutenção (isto aqui o que vai mais dar dores de cabeça para  eles). Isto citando algumas coisas, dependendo do site, ou se for uma web aplicação, tem gerenciamento de banco de dados no lado do cliente para acesso de conteúdo offline, enfim, já \"assassinaram\" of \"Front-ends\" várias vezes, mas até hoje tem vaga. Apesar que não da para fechar os olhos as altas exigência.\nOutro ponto é que toda aplicação deles será um bootstrap da vida. Simples e tudo genérico. IA não tem criatividade e não faz magia, ela faz o que você pede, e tem que pedir direito. Apesar disso, eu duvido que uma IA consiga criar algo muito diferente de uma coisa para outro, a não ser com cores e organização diferente de elementos.",
      "Meus 2 cents:\nUm ponto voce pegou em cheio aqui: a falta de criatividade da IA.\nComo a IA nao cria nada, eh apenas um analisador semantico-estatistico que chuta caminhos (palavras/tokens) baseado em pesos daquilo que ja foi alimentado no seu treinamento (mesmo que seja um RAG), limitando a tal criatividade ao um parametro de randomicidade nos caminhos/pesos escolhidos - a probabilidade dela criar algo diferenciado eh bem remota.\nPor outro lado - o que vemos sao empresas que querem mais do mesmo, ate para que o usuario se sinta \"confortavel\" com a interface. Neste ponto dou o braco a torcer para o Jobs ou o Ford e suas posicoes sobre o assunto - \"Ford sobre a opiniao dos clientes sobre os carros: Se eu tivesse perguntado às pessoas o que elas queriam, elas teriam dito - cavalos mais rápidos.\". Sei que eh um exagero - mas o ponto aqui eh: nao existe mudanca sem ousadia, e nao existe ousadia sem risco (adoro o filme \"Ford vs Ferrari\" sobre este assunto).",
      "No fundo eu acho que essa história toda é só para aumentar a visibilidade. Parece que a moda agora é sempre um CEO soltar algum assunto polêmico, que gere discussão e que acaba trazendo visibilidade para o próprio negócio.",
      "Acredito fortemente que nenhuma empresa ira confiar plenamente numa ia! Ela é uma facilitadora de codigo, ela ta é aumentando a produtividade e a diversidade dentro da empresa! se a empresa esta trocando gente por maquina vai ver ela não tem tanta preocupação assim com serviço que presta, e nem se importa com a qualidade! acontece que nessa area de tecnologia tem muito ctrl c e v e sempre foi assim, temos poucos sistemas operacionais, poucos editores de texto, poucos editores de videos, etc. o que salva são as necessecidades individuais, podem ou nao ser atendidas por um simples prompt, o que toma emprego não é ferramenta em si a questão é bem complexa! Mas querem culpar a ferramenta!!",
      "Meus 2 cents:\nTenho experimentado algumas ferramentas como:\n\nlovable: a que gostei mais\nv0\nbolt.new\n\nAlem de ferramentas no-code/low-code como:\n\nN8N\nappsmith\n\nE o que percebi foi:\n\nSe voce nao for desenvolvedor com alguma experiencia, nao vai conseguir criar aplicativos que resistam a testes de integridade e seguranca, ou que tenham as funcionalidades que realmente fazem diferenca.\n\nTalvez este cenario mude em 1 ou 2 anos (isto esta acelerando muito), mas neste momento estas ferramentas ate criam um front-end bonito, mas por baixo dos panos o codigo eh bem simples e faltam funcionalidades e estruturas de seguranca basicas.\nAlem disso, alguem que saiba o que esta fazendo tem de pedir as funcionalidades especificas que vao ser necessarias, com os ajustes necessarios. Uma biblioteca de prompts pode ate ajudar, mas nao resolve tudo.\nTem muito mercado ainda para devs - mas estes tem de se adaptar a esta nova realidade, aprendendo a usar estas ferramentas, ate porque vai ser o novo \"basico\" que sera exigido nas contratacoes.\nUm detalhe extra: o uso destas ferramentas acaba ficando caro para empresas - e a perspectiva eh ficar cada vez mais caro. Talvez exista um nicho de mercado ai para infra-estrutura: criar servidores de IA sob-demanda para codigo.",
      "Vi o exato mesmo post, mas assim como muitos devs, vou na mão inversa desse pensamento, simplesmente não faz sentido, atualmente, confiar na IA ou em prompts para fazer seu frontEnd, a conta não fecha, principalmente para lógica de negócios, criatividade e senso de existência. É isso, não acho que seja algo para se preocupar, inclusive nesse mesmo post, tem muitos outros usuários falando que em pouco tempo o Adalberto estará contratando novos devs. Eu mesmo acho que ele só quis chamar atenção, pois na gringa fizeram algo parecido. Deixo um ultimo ponto: Não creio que a IA chegue a níveis altos de desenvolvimento pelos próximos 10-15 anos, isso, claro, pode acontecer de nunca chegar."
    ],
    "audio_path": "/tmp/[DISCUSSÃO] O fim do front-end? Empresa não contrata mais devs front-end e apela para IA.mp3",
    "summary": {
      "summary": "A discussão gira em torno do anúncio de uma empresa sobre a substituição de desenvolvedores front-end por IA, gerando debates sobre o futuro da profissão. Alguns participantes argumentam que a IA pode aumentar a produtividade e diversidade, enquanto outros alertam para a perda de qualidade e a crescente dívida técnica decorrente do uso indiscriminado de código gerado por IA. A falta de criatividade da IA é apontada como uma limitação, com alguns defendendo que a padronização pode ser benéfica para a experiência do usuário, enquanto outros enfatizam a necessidade de ousadia e inovação. A discussão também aborda a importância de desenvolvedores qualificados que se adaptem às novas ferramentas, utilizando-as de forma estratégica e evitando a substituição completa da expertise humana. Há quem veja a atitude da empresa como uma jogada de marketing para ganhar visibilidade.",
      "keywords": [
        "front-end",
        "IA",
        "desenvolvimento de software",
        "automação",
        "dívida técnica",
        "UI",
        "criatividade"
      ]
    }
  },
  {
    "title": "[DÚVIDA] Por que parece que uma galera odeia o PHP",
    "link": "https://www.tabnews.com.br/gabrielso/duvida-por-que-parece-que-uma-galera-odeia-o-php",
    "content": "Sou desenvolvedor PHP/Laravel a quase 4 anos e vejo na bolha dev uma rejeição sobre o PHP e me pergunto o \"pq?\". Acho que minha dúvida é o que poderia ser melhor na linguagem e o que as outras linguagens podem ter de melhor, sabe?",
    "comments": [
      "Só pra complementar (e também pra não repetir o que já foi dito), segue abaixo algumas discussões interessantes que já tivemos sobre o assunto:\n\nO que vocês acham do mundo do php? (não é pergunta repetitiva e sim um debate)\nAinda vale a pena PHP em 2023?\nPor qual motivo PHP é tão mau falado mesmo hoje com o PHP 8?\nPHP ou C#?\nPHP é usado por 78% da internet - Seria esse o motivo?\n",
      "Mais alguns:\n\nhttps://www.tabnews.com.br/Gouveia/meu-conselho-para-quem-esta-inciando-em-programacao\nhttps://www.tabnews.com.br/cauacominhodev/desafios-de-iniciantes-em-php-pdo-e-poo\nhttps://www.tabnews.com.br/blaxprism/o-que-voces-acham-do-php-nao-e-pergunta-repetitiva-e-sim-um-debate\nhttps://www.tabnews.com.br/RGC/java-x-php\n\nE claro que tem uma resposta minha que seria negativada porque eu não falei o que a pessoa queria ouvir, ela não mostrou se tem algum erro: https://www.tabnews.com.br/maniero/3fa7703f-975d-46b5-9be6-7c9104219317. Aqui então: https://www.tabnews.com.br/maniero/eeaa88b3-6fdb-4660-a454-a959c587ae0d.\nE também pode ajudar: https://www.tabnews.com.br/maniero/faq-do-programador-perdidao.\nEm resumo: algumas pessoas sabem do que estão falando e as críticas ou elogios são pertinentes e essas pessoas fazem ambos, mesm oque você não veja. As outras hão fanboys ou haters, só ignore, essa pessoa geralmente só sabe falar bem ou mal de alguma coisa, e quase em todos os casos ela não tem ideia do que fala, faz parte da personalidade dela só juntar crenças e querer impor como verdades, mesmo sem base alguma, ela não tem condições de estudar profundamente, ir além do simplismo, e não só repetir o que um tonto qualquer falou.\nAo autor da pergunta ou outros que tenham a mesma dúvida: posso ajudar com algo mais específico e que não foi coberto em todos esses links que postamos?\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "Basicamente isso é bairrismo e preconceito contra o wordpress. Todos tem sua linguagem preferida e fazem chacota com as outras linguagens.\nTem quem fale mal de PHP, Java JS, Python.\nNo fim cabe a você filtrar comentários de \"time\" do que realmente agrega à sua vida",
      "Eu sou desenvolvedor PHP à mais de 23 anos então acho que posso falar com um pouco de propriedade sobre esse assunto. Wordpress é terrível, é um exemplo perfeito de como não se deve fazer as coisas na questão de boas práticas, porém em parte é graças à esse \"fidumaégua\" que o PHP ganhou muita popularidade nos anos 2000. Quem não se aprofundou na linguagem provavelmente conhece o PHP no jeito wordpress de ser e não gosta (com toda razão).\nE sim, eu sou um dos que fala mal do wordpress, mesmo amando PHP.",
      "Já tentei trabalhar DIVERSAS vezes com wordpress, fazer plugins, temas, e definitivamente não é pra mim.\nTenho que jogar anos de conhecimento fora pra me adequar à uma plataforma que pra qualquer coisa precisa fazer gambiarra atrás de gambiarra hahahaha",
      "Se fizer direitinho o wordpress dá um jeito de quebrar, tem que ser na base da gambiarra mesmo",
      "Minha opinião é que o programador PHP é meio que autossuficiente. A linguagem é bem produtiva, tem a maior base de legados em sites e apps na internet, tem boas opções de framework, programadores sêniores com mais de 2 décadas de experiência, e vagas mesmo em recessão.\nAi vem o carinha que aprendeu a nova linguagem do momento querer discutir e comparar com o PHP, mas o programador PHP não dá bola. Não tem saco pra isso e nem precisa. Vai ver é por isso.",
      "Só a criançada de hoje odeia o php ficam brincando com 500 libs pra exibir uma pagina kkkkkk, que se for hospedar custa caro sem falar da lentidão! Php é simples vc aprende rapido, é facil, não da pra ganhar grana ensinando php! eheheh Minha opnião! foquem em php tem muita empresa que quer a sua especialidade!! valeu!!",
      "A história do PHP e da web são uma só basicamente, e infelizmente muita gente culpa a linguagem (por mais idiota que pareça) por atrocidades que Devs de outrora faziam em PHP.",
      "Acho que é histórico, PHP era famosa por ser a linguagem utilizada por aquele sobrinho que fazia as coisas em vez de um time contratado."
    ],
    "audio_path": "/tmp/[DÚVIDA] Por que parece que uma galera odeia o PHP.mp3",
    "summary": {
      "summary": "A discussão gira em torno da suposta rejeição ao PHP na comunidade de desenvolvimento. O autor original questiona os motivos dessa aversão, buscando entender o que outras linguagens oferecem de superior e o que poderia ser aprimorado no PHP. Os comentários revelam que parte da crítica está associada ao uso do WordPress, frequentemente apontado como exemplo de más práticas de programação, embora tenha contribuído para a popularização do PHP. Alguns desenvolvedores com experiência defendem a linguagem, destacando sua produtividade, vasta base de código legado e a disponibilidade de vagas no mercado. Há menções sobre o bairrismo e preconceito entre diferentes comunidades de linguagens, com alguns participantes sugerindo que o 'ódio' ao PHP é infundado, resultante de experiências negativas com códigos mal estruturados no passado. A simplicidade do PHP é vista tanto como uma vantagem (facilidade de aprendizado e desenvolvimento rápido) quanto uma desvantagem (menor potencial para gerar receita com ensino). A discussão também aborda a autossuficiência dos programadores PHP e sua aparente falta de interesse em comparar a linguagem com as novidades do mercado.",
      "keywords": [
        "PHP",
        "WordPress",
        "linguagens de programação",
        "legado",
        "desenvolvimento web",
        "comunidade PHP",
        "produtividade"
      ]
    }
  },
  {
    "title": "TypeScript 10x Mais Rápido: O Futuro da Experiência de Desenvolvimento",
    "link": "https://www.tabnews.com.br/OsvaldoVictor/typescript-10x-mais-rapido-o-futuro-da-experiencia-de-desenvolvimento",
    "content": "No dia 11 de março de 2025, Anders Hejlsberg, arquiteto-chefe do TypeScript, anunciou um marco revolucionário para a linguagem: um TypeScript 10x mais rápido. Esse avanço promete transformar a experiência de desenvolvimento, especialmente para projetos de grande escala, onde o desempenho do TypeScript tem sido um desafio. O anúncio detalha os esforços para criar uma versão nativa do compilador TypeScript, que trará melhorias significativas em velocidade, uso de memória e eficiência.\nO Problema Atual\nTypeScript é amplamente amado por sua capacidade de melhorar a produtividade dos desenvolvedores, especialmente em grandes codebases. No entanto, à medida que os projetos crescem, o tempo de carregamento e verificação do TypeScript pode se tornar um gargalo. Desenvolvedores frequentemente enfrentam longos tempos de inicialização do editor e builds lentos, o que impacta diretamente a produtividade. Além disso, ferramentas modernas, como assistentes de IA, exigem respostas rápidas e acesso a grandes volumes de informações semânticas, algo que o TypeScript atual nem sempre consegue fornecer de forma eficiente.\nA Solução: TypeScript Nativo\nA equipe do TypeScript está trabalhando em uma versão nativa do compilador TypeScript, escrita em Go. Essa nova implementação promete reduzir drasticamente o tempo de build, melhorar a inicialização do editor e diminuir o uso de memória. Os primeiros testes mostram resultados impressionantes:\n\nVS Code: Tempo de build reduzido de 77,8s para 7,5s (10,4x mais rápido).\nPlaywright: De 11,1s para 1,1s (10,1x mais rápido).\nTypeORM: De 17,5s para 1,3s (13,5x mais rápido).\n\nEsses números são apenas o começo. A equipe espera que a maioria dos projetos veja melhorias na ordem de 10x em velocidade de verificação e builds.\nBenefícios para Editores\nA maior parte do tempo dos desenvolvedores é gasto em editores, e a performance nessa área é crítica. Com a nova implementação nativa, o tempo de carregamento de projetos grandes no editor será reduzido significativamente. Por exemplo, o tempo de carregamento do projeto VS Code no editor caiu de 9,6s para 1,2s, uma melhoria de 8x. Além disso, operações como autocompletar, navegação de código e busca de referências serão muito mais rápidas.\nRoadmap e Compatibilidade\nA equipe do TypeScript está planejando uma transição suave para a nova versão nativa. O TypeScript 6.x continuará sendo desenvolvido com base no código JavaScript atual, enquanto o TypeScript 7.0 será a primeira versão baseada na implementação nativa. A equipe garante que a compatibilidade com projetos existentes será mantida, e os desenvolvedores poderão migrar para a nova versão quando estiverem prontos.\nPróximos Passos\nNos próximos meses, a equipe compartilhará mais detalhes sobre o desempenho, a nova API do compilador e a integração com o Language Server Protocol (LSP). Além disso, uma sessão de AMA (Ask Me Anything) está marcada para o dia 13 de março no Discord da comunidade TypeScript, onde os desenvolvedores poderão tirar dúvidas e dar feedback.\nImpacto no Ecossistema\nEssa melhoria de desempenho não apenas beneficia desenvolvedores individuais, mas também abre portas para novas ferramentas e experiências de desenvolvimento. Com a capacidade de processar grandes volumes de dados semânticos em tempo real, o TypeScript nativo permitirá a criação de ferramentas de IA mais avançadas e integradas, elevando a produtividade a um novo patamar.\nConclusão\nO anúncio do TypeScript 10x mais rápido é um marco emocionante para a comunidade de desenvolvimento. Com ganhos significativos em velocidade, eficiência e experiência do usuário, o TypeScript está se preparando para continuar sendo uma das linguagens mais poderosas e versáteis do mercado.",
    "comments": [
      "Não entendi muito bem, typescript agora vai ser compilado? Se sim, porque não usar um C++ da vida?",
      "TypeScript sempre foi compilado. Alguns preferem chamar de transpilado porque transforma um código de mais alto nível em um código em outras linguagem que  é de mais alto nível também. Depois que você escreve o código você chama o tsc que é TypeScript Compiler.\nTudo vai continuar como antes, se ninguém te falasse nada você quase nem perceberia (pelo menosessa é a ideia), a não ser que pelo menos agora tem que chamar tsgo para compilar mais rápido. O novo compilador ainda vai transpilar de TS para JS, seu código final não será nativo, não será Go, não muda nada. Se tudo correr bem ele dará exatamente a mesma saída de antes com a mesma entrada, só levará 6 segundos em vez de 60 para um projeto gigantesco. Paraa a maioria dos projetos ele passará de alguns décimos para pouco menos de 1 décimo de segundo.\nO único objetivo desse port (já falo mais sobre isso) é tornar a compilação mais rápida, nada mais. Tanto que eles escolharam Go para ter que automatizar parte da mudança de código e o que precisaria fazer manual fosse parecido com JS/TS, assim daria menos trabalho e correria menos riscos.\nEles optaram por fazer um port que é só a mudança mais simples que dá para fazer de uma linguagem para outra. Não é uma reescrita do compilador, não é objetivo tornar o compilador melhor, melhor arquitetado, ter um código mais bem feito, ou qualquer coisa parecida. Por isso escolhram Go, uma linguagem que pode dar mais performance que JS, seja porque o compilador passa ser nativo, seja porque permite usar threads e isso é boa parte do ganho da performance.\nJS não é adequada para uma quantidade significativa de problemas, mesmo que muitas pessoas usem assim. E a decisão errada pode partir até mesmo dos maiores gênios da comnputação. Se bem que eu não conheço todo o processo de escolha de começar fazer o compulador em JS e depois adotando TS. Pode ter sido uma decisão política acertada, mas que tinha um prazo de validade. Do ponto de vista de engenharia pura eu tenh quase certeza que seria melhor desde o início usar C# para o compilador. Eu sei que isso traria alguma resistência da comunidade de JS que já tem por ser Microsfot, ou por outros motivos, alguns que eu mesmo tenho ressalvas.\nLinguagens de script são adequadas para fazer scripts, as pessoas usam para outras coisas de teimosas ou por ignorância, até porque dáp ra fazer outras coisas com elas, mas tecnicamente não é o mais adequado, você vai pagar algum preço, que pode não ser problema para você. Só que em muitos casos passa ser problema mais para frente, é uma dívida técnica que você contraiu e vai pagar com juros em algum momento.\nNão faria sentido portar para C# agora, só compensaria e eu tenho certeza que o fariam, porque provavelmente daria um resultado ainda maior de ganho, se a decisão tivesse sido de reescrever o compilador.\nC++ tem dificuldades de gerenciamento de memória, então isso já seria um pouco improdutico. O mesmo motivo de não terem adotado C# (que não tem a dificuldade já citada), vale para C++, não são linguagens tão parecidas com JS/TS que é como o compilador foi escrito originalmente. Em C# teria alguns ganhos, em C++ teria outros, mas custaria bem mais caro fazer. Poderiam pensar em Rust, até mesmo Java, mas todos possuem o mesmo problema.\nO compilador do C# originalmnente foi escrito em C++, despois ele foi reescrito em C# com nova arquitetura, que é considerado por muito \"o estado da arte\" em compiladores, e ficou mais rápido que o compilador escrito em C++, mesmo ele tendo muito mais features que antes.\nGo foi a escolha pragmática, a melhor decisão de engenharia depois que politicamente adotou-se a estratégia de port e não reescrita. Eu acho um desperdício, preferia a reescrita adotando técnicas semelhantes ao do atual compilador de C#. Todas as linguagens devriam fazer algo parecido.\nIsso reforça e \"comprova\" o que eu sempre falei, Go é a linguagem que gera código nativo quando a pessoa acha que a linguagem de script não está dando conta da performance.\nVeja mais: https://www.tabnews.com.br/FlavioEscobar/diferenca-entre-compilador-e-interpretador.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "This is the way...",
      "TypeScript 🤝🏻 Go, que união linda!"
    ],
    "audio_path": "/tmp/TypeScript 10x Mais Rápido: O Futuro da Experiência de Desenvolvimento.mp3",
    "summary": {
      "summary": "O artigo discute o anúncio de uma versão do TypeScript 10 vezes mais rápida, impulsionada por um novo compilador nativo escrito em Go. Essa mudança visa otimizar a experiência de desenvolvimento, especialmente em projetos de grande escala, onde a performance do TypeScript tem sido um gargalo. Os comentários giram em torno do processo de compilação/transpilação, questionando a escolha do Go em vez de C++ ou C#. Um dos usuários explica que o TypeScript sempre foi compilado (ou transpilado) e que a mudança para Go é uma decisão pragmática para melhorar a performance sem reescrever o compilador por completo. A discussão também aborda as limitações de linguagens de script para certas tarefas e a adequação do Go para gerar código nativo quando a performance é crucial. Alguns usuários expressam entusiasmo com a união de TypeScript e Go.",
      "keywords": [
        "TypeScript",
        "compilador",
        "Go",
        "performance",
        "desenvolvimento",
        "transpilação",
        "JavaScript"
      ]
    }
  },
  {
    "title": "\"What do you want to build today?\"",
    "link": "https://www.tabnews.com.br/olucasandrade/what-do-you-want-to-build-today",
    "content": "Sabe, é muito doido ganhar experiência e, ao mesmo tempo, perder a inocência sobre como o mercado funciona. Você começa a perceber padrões, enxergar tendências e entender os movimentos de maneira menos ingênua.\nE tem uma coisa que vem me perseguindo na internet: essa frase clichê estampada em todo lugar. \"What do you want to build today?\" Parece um mantra, um convite para um mundo onde qualquer ideia pode virar um produto. Mas a realidade por trás disso é bem mais profunda do que apenas criar um software.\nAtualmente, estamos vivendo a era dos produtos que constroem produtos com IA. Essa revolução não passou despercebida por mim. Na verdade, eu mesmo uso e abuso da IA quando faz sentido. Ela acelera, automatiza e potencializa o trabalho.\nMas o que me faz refletir é o ritmo insano de substituição das ferramentas. O Lovable chegou pra desbancar o Bolt, que chegou pra desbancar o v0, que chegou pra desbancar o DataButton, que chegou pra desbancar o Replit... E assim seguimos, num ciclo interminável.\n\"Sim! Usem esse  agora! Esse sim é definitivamente melhor que os 94 quintilhões anteriores.\"\nE sabe de uma coisa? Às vezes, eles são mesmo melhores. O Lovable gera interfaces mais bonitinhas, o Replit não se limita a uma stack específica, cada um tem suas vantagens. A quantidade de concorrentes é bizarra? Pensando de maneira, lógica, não. Devem estar lucrando como nunca em cima de empresas que acham que vão trocar pessoas por IA. Então, nada disso me espantava tanto, até que ontem vi um tweet do Notion.\nLá estava ele, um software de anotações e organização de documentos, estampando a famigerada frase: \"What do you want to build today?\". E o placeholder? Um movie tracker.\nTá, acho que agora eu entendi.\nOs \"tubarões\" estão fazendo todos a mesma coisa, né? Ainda que não faça o menor sentido ter aquilo, né?\nSabe, nesse momento parece que estamos diante de uma nova corrida pelo petróleo. Mas, diferente das outras, aqui o que importa é apenas correr. Se vai dar certo ou não, se faz sentido ou não, pouco importa no curto prazo. E nesse caso, não tô apontando isso como um problemasso, na verdade, provavelmente tá tudo bem.\nQuais serão os impactos positivos e negativos disso? Veremos nos próximos capítulos.",
    "comments": [
      "\nAtualmente, estamos vivendo a era dos produtos que constroem produtos com IA. Essa revolução não passou despercebida por mim\n\nEu discordo.\nA 'internet revolution' vem alterando mercado financeiro, mercado da comunicação, mercado do entrerimento, mercado de trabalho...\nInteligência artificial é só um assuntinho.",
      "KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK assuntinho"
    ],
    "audio_path": "/tmp/\"What do you want to build today?\".mp3",
    "summary": {
      "summary": "O artigo aborda a percepção do autor sobre a rápida evolução e substituição de ferramentas impulsionadas por IA no mercado atual, refletindo sobre o clichê \"O que você quer construir hoje?\". O autor observa um ciclo incessante de novas ferramentas que surgem para substituir as anteriores, questionando se essa corrida constante faz sentido a longo prazo e se as empresas estão realmente lucrando ao tentar substituir pessoas por IA. Ele usa o exemplo do Notion, um software de organização, para ilustrar como até mesmo plataformas estabelecidas estão adotando essa abordagem. Um comentário discorda, argumentando que a IA é apenas um pequeno aspecto da revolução da internet, que afeta diversos mercados.",
      "keywords": [
        "IA",
        "produtos",
        "mercado",
        "inovação",
        "ferramentas",
        "substituição",
        "tendências"
      ]
    }
  },
  {
    "title": "Estou desenvolvendo um micro SaaS, mas não sou programador kkk",
    "link": "https://www.tabnews.com.br/markeos/estou-desenvolvendo-um-micro-saas-mas-nao-sou-programador-kkk",
    "content": "Estou construindo algumas coisas usando Inteligência Artificial, pois é sei que os programadores provavelmente não gostam dessa ideia, mas bem eu sei que como tenho muitas ideias e não sei como achar alguem capaz de enteder elas eu mesmo fui em busca de achar uma maneira de programar.\nEntão com essa chegada da tal IA para código, eu acabei me aventurando em uma jornada que ja estou muito submerso para poder sair dela.\nConstrui varios agentes usando Langchain, focado em marketing pois é uma área que estoudo, mas a minha visão não ficou só nesses agentes...\nEntão tive uma grande ideia kkkk, pq não construir um SaaS de agentes que faça uma automação completa de varias coisas o marketing?\nEntão mais uma vez foquei muito e ja faz mais de 3 meses que estou fazendo só isso, agora encontrei varias dificuldades por conta que preciso também ter infraestrutura para esse sistema, e realmente essa é inha maior dificuldade.\nEntão estou fazendo esse post pois quero saber qual a melhor saída, ou até mesmo encontrar uma pessoa que possa ser até mesmo um parceiro de negócios pois tenho muitas ideias validadas, só preciso saber desenvolver e colocar em prática essas ideias.\nSou empreendedor ja faz mas de 10 anos, e tenho muita vivência e experiência em negócios.\nENTÃO SE ALGUEM TIVER INTERESSE, VAMOS CONVERSAR.",
    "comments": [
      "\nEntão tive uma grande ideia kkkk\n\nSinceramente essa risada no final invalidou completamente sua frase anterior. Você não me passou confiança no seu post e a impressão que tive é que quer apenas alguém pra te ajudar a finalizar um produto cheio de problemas criados por alguém sem conhecimento.\nNos anos de desenvolvimento que tive isso me cheia a muita dor de cabeça até porque:\n\nparceiro de negócios pois tenho muitas ideias validadas\n\nEssa ideia que você apresentou está validada? Já tem clientes pagantes?\nSe não porque eu deveria aplicar tempo nela e o que ganharia com isso?",
      "Estou sendo sarcástico realmente, mas rindo de mi mesmo por ser capaz de pensar que conseguiria sozinho,a a minha intenção é realmente achar alguem parceiro.\nA ideia está sim validada e ja estou fechando uma consultoria com a Fluxo uma empresa junior da UFRJ para direcionar comercialmente o projeto da melhor maneira no mercado.",
      "Meus 2 cents:\nDicas:\n\n\nLangFlow eh o langchain em modo visual, ajuda um monte.\n\n\nbaserow para guardar os dados\n\n\nsupabase para guardar os dados (alternativa)\n\n\nredis para guardar os dados (alternativa)\n\n\nappsmith para montar os formularios (as telas) dos dados acima\n\n\nN8N para montar os workflows\n\n\nVPS e docker para juntar tudo\n\n\nse quiser trocar ideia: TheOletros@proton.me",
      "claro vamos trocar uma ideia, estou colocando muita energia nesse produto."
    ],
    "audio_path": "/tmp/Estou desenvolvendo um micro SaaS, mas não sou programador kkk.mp3",
    "summary": {
      "summary": "O artigo relata a experiência de um empreendedor sem conhecimento em programação que está desenvolvendo um micro SaaS utilizando Inteligência Artificial e Langchain para automação de marketing. O autor busca um parceiro com habilidades de desenvolvimento para superar desafios de infraestrutura e colocar em prática suas ideias, que afirma já terem sido validadas. Os comentários expressam tanto ceticismo quanto sugestões de ferramentas e plataformas (LangFlow, Baserow, Supabase, Redis, Appsmith, N8N, VPS e Docker) para auxiliar no desenvolvimento. Um dos comentários questiona a validação da ideia e a proposta de parceria. O autor respondeu, reconhecendo seu próprio sarcasmo e confirmando a validação da ideia, mencionando uma consultoria com uma empresa júnior da UFRJ.",
      "keywords": [
        "micro SaaS",
        "Inteligência Artificial",
        "Langchain",
        "automação de marketing",
        "infraestrutura",
        "parceria de negócios",
        "validação de ideias"
      ]
    }
  },
  {
    "title": "🌟 Como fiz Vibe Coding até colocar PvP em um jogo feito 100% com AI faturando USD 750 em 3 dias.",
    "link": "https://www.tabnews.com.br/lucasmontano/como-fiz-vibe-coding-ate-colocar-pvp-em-um-jogo-feito-100-por-cento-com-ai-faturando-usd-750-em-3-dias",
    "content": "🌟 Como fiz Vibe Coding até colocar PvP em um jogo feito 100% com AI faturando USD 750 em 3 dias.\n\"Hey Claude, please machine god make a PvP game for me...\"\nE depois de 7 dias alcançamos 7,530 jogadores únicos, 2 milhões de acessos e 3 ataques MASSIVO de DDoS (que explica os 2Mi acessos)... mas nem tudo é tristeza também tive aprendizados:\n\nUSD 320 me custou até agora em prompt no Code Agent da Anthropic;\nUSD 25 / mês na CloudFlare pra proteger dos ataques;\nUmas 7 horas na frente do computador (impressionante na real);\n\nDesculpa isso não é aprendizado são apenas números, o que eu realmente aprendi foi que por mais que tu possa pedir pra AI fazer o teu jogo seguro para colocar em prod, ela ainda assim vai deixar brechas de segurança criticas :)\nEla vai gerar arquivos de 3k loc e depois começar a duplicar functions quando pedir para fazer DRY... na verdade é mais fácil tu pedir pra ela duplicar dividindo os arquivos para depois deletar os duplicados.\nO faturamento vem de assinatura feita dentro do próprio jogo, que na verdade vai te dar o melhor CPM do mercado de tecnologia. Eu digo isso porque o jogo é só um experimento e patrocinar ele não faz sentido, o que faz sentido é a menção mensal que farei no canal Lucas Montano do seu produto, serviço / empresa.\n🌟 http://simulator.stupidbutton.club/\nSe quiser apoiar o projeto deixa um comentario aqui embaixo, se quiser patrocinar manda DM ou comentário depois de assinar o plano dentro do jogo e vamos continuar esse grande experimento de fazer um jogo 100% feito por AI.\nEu juro, eu não encostei a mão em nenhuma linha de código até o momento.",
    "comments": [],
    "audio_path": "/tmp/🌟 Como fiz Vibe Coding até colocar PvP em um jogo feito 100% com AI faturando USD 750 em 3 dias..mp3",
    "summary": {
      "summary": "O artigo relata a experiência de criar um jogo PvP utilizando inteligência artificial, desde a concepção inicial até o lançamento e monetização. O autor destaca o uso do Code Agent da Anthropic, os custos envolvidos (prompts e proteção contra ataques DDoS), e o tempo gasto no projeto. Apesar do sucesso inicial, com milhares de jogadores e faturamento em dólares, o autor aponta desafios como brechas de segurança geradas pela IA e duplicação de código. A monetização ocorre por meio de assinaturas no jogo, com a promessa de menção no canal do autor como forma de patrocínio.",
      "keywords": [
        "AI",
        "jogo",
        "PvP",
        "Code Agent",
        "Anthropic",
        "CloudFlare",
        "faturamento"
      ]
    }
  },
  {
    "title": "Monitorando a cadeia de raciocínio",
    "link": "https://www.tabnews.com.br/jackjohn/monitorando-a-cadeia-de-raciocinio",
    "content": "Bom dia, esse é meu primeiro post nesse fórum.\nRecentemente, a OpenAI publicou um artigo sobre a \"ofuscação\" de pensamentos na cadeia de raciocínio de LRMs (Large Reasoning Models), que ocorre no processo de finetuning desses modelos. Basicamente, o modelo esconde pensamentos que \"entregariam\" que ele está em um caminho desalinhado, o que impede a filtragem de respostas indesejadas antes de elas serem geradas.\nDessa forma, o modelo pode produzir uma cadeia de raciocínio totalmente normal, com o comportamento indesejado sendo apresentado apenas na resposta final.\nGostaria de saber se já pensaram sobre o tema, ou se têm algum recurso para ler mais sobre ele. Existem pesquisas sobre a \"interpretabilidade mecanística\" em LLMs mas não estou ciente de algo assim aplicado especificamente a LRMs.\nVídeo do Wes Roth que me inspirou a escrever isto :\n\nA ofuscação é uma nova forma de hacking de recompensa: O artigo apresenta o conceito de ofuscção, onde os modelos escondem suas intenções para hacking de recompensa dentro de suas cadeias de pensamento, tornando difícil detectá-las.\nA penalização de pensamentos ruins pode levar à ofuscação: Quando os modelos são penalizados por ter \"pensamentos ruins\", eles podem aprender a esconder suas verdadeiras intenções e, em vez disso, exibir cadeias de pensamento aparentemente benignas, enquanto ainda realizam hacks de recompensa.\nA ofuscação pode ser vista como uma forma de processamento inconsciente: À medida que os modelos se tornam mais avançados, eles podem ser capazes de fazer conexões mentais e saltos sem pensar explicitamente sobre elas, tornando mais difícil detectar a obfuscção.\nPressões de otimização implícitas podem levar à ofuscação: Pressões de otimização sutis, como mostrar cadeias de pensamento aos usuários e pedir que eles prefiram um modelo sobre outro, podem inadvertidamente causar que os modelos obfuscem seus pensamentos.\nA redução do custo das cadeias de pensamento também pode levar à ofuscação: Aplicar penalidades a cadeias de pensamento longas pode causar que os modelos comprimam seu raciocínio em suas ativações, tornando seus pensamentos mais difíceis de monitorar.\n\nPost original da OpenAI.\nO que pensam/já pensaram sobre o assunto?",
    "comments": [],
    "audio_path": "/tmp/Monitorando a cadeia de raciocínio.mp3",
    "summary": {
      "summary": "O artigo aborda o conceito de \"ofuscação\" em Large Reasoning Models (LRMs), conforme explorado em um artigo da OpenAI. A ofuscação refere-se à capacidade do modelo de esconder pensamentos desalinhados durante o processo de finetuning, dificultando a identificação de respostas indesejadas. O autor busca discussões e recursos sobre o tema, mencionando a interpretabilidade mecanística em LLMs e um vídeo de Wes Roth que o inspirou. O texto explora como a penalização de pensamentos \"ruins\", pressões de otimização implícitas e a redução do custo das cadeias de pensamento podem levar os modelos a ofuscar suas verdadeiras intenções.",
      "keywords": [
        "ofuscação",
        "cadeia de raciocínio",
        "LRMs",
        "OpenAI",
        "interpretabilidade mecanística",
        "hacking de recompensa",
        "finetuning"
      ]
    }
  },
  {
    "title": "Apple oferecerá suporte a mensagens RCS criptografadas com dispositivos Android",
    "link": "https://www.tabnews.com.br/NewsletterOficial/apple-oferecera-suporte-a-mensagens-rcs-criptografadas-com-dispositivos-android",
    "content": "A Apple confirmou que futuras atualizações do iOS, iPadOS, macOS e watchOS incluirão suporte a mensagens RCS com criptografia de ponta a ponta.\nA novidade é possível porque a GSM Association (GSMA), responsável pelo desenvolvimento do padrão RCS, anunciou a adoção do protocolo Messaging Layer Security (MLS), permitindo criptografia interoperável entre diferentes plataformas pela primeira vez.\nO novo padrão foi desenvolvido em colaboração com operadoras móveis, fabricantes de dispositivos e provedores de tecnologia, incluindo a Apple.\nO RCS, no entanto, depende do suporte das operadoras e fabricantes. No Brasil, as principais operadoras — Vivo, Claro e TIM — já oferecem compatibilidade para dispositivos Android, mas o suporte para iOS ainda não foi implementado.",
    "comments": [],
    "audio_path": "/tmp/Apple oferecerá suporte a mensagens RCS criptografadas com dispositivos Android.mp3",
    "summary": {
      "summary": "A Apple anunciou que suas futuras atualizações de sistemas operacionais (iOS, iPadOS, macOS e watchOS) incluirão suporte ao padrão de mensagens RCS com criptografia de ponta a ponta. Essa novidade é viabilizada pela adoção do protocolo Messaging Layer Security (MLS) pela GSMA, permitindo a comunicação criptografada entre diferentes plataformas. O desenvolvimento do novo padrão contou com a colaboração de diversas empresas, incluindo a Apple. No Brasil, as principais operadoras já oferecem suporte ao RCS em dispositivos Android, mas ainda não implementaram a compatibilidade com iOS.",
      "keywords": [
        "Apple",
        "RCS",
        "criptografia",
        "Android",
        "iOS",
        "GSMA",
        "interoperabilidade"
      ]
    }
  },
  {
    "title": "[DÚVIDA] Como se diferenciar como Front-End hoje em dia?",
    "link": "https://www.tabnews.com.br/ItaloCanturil/duvida-como-se-diferenciar-como-front-end-hoje-em-dia",
    "content": "Venho na procurando e aplicando vagas ativamente e sinto um pouco a dificuldade e necessidade de se diferenciar hoje em dia pois o que vejo é que se balançar uma árvore cai um monte de dev Front-End, principalmente com React.\nMinha dúvida é, o que fazer para se destacar entre tantos outros candidatos?\n\nopen source?\nposts no linkedin?\nprojetos mais elaborados?\nlargar Front-End e aprender a realmente a programar?\n",
    "comments": [
      "Estava pensando nisso também esses dias, mas acho que algo importante que muitos front-ends deixam de lado é a questão da arquitetura, design patterns e código limpo. Acredito que esses pontos sejam essenciais para se diferenciar e, consequentemente, sair na frente de muitos!",
      "Diferenciar de repente nem é uma meta tão simples.\nTalvez apenas se conceder o titulo de contribuinte seja mais tangível.\nQuando algum user posta no github a ação é considerada uma contribuição:\nAlguém contribuindo com a comunidade.\nHoje em dia eu contribuo de algumas maneiras em alguns segmentos da sociedade. Ao invés de procurar aceitação dos outros eu procuro me agradar e me valorizar.",
      "Diria para não exatamente largar o frontend, mas aprender também o backend. Aí o leque de oportunidades vai crescer muito... De toda forma, todas essas opções também são válidas para se destacar."
    ],
    "audio_path": "/tmp/[DÚVIDA] Como se diferenciar como Front-End hoje em dia?.mp3",
    "summary": {
      "summary": "O artigo levanta a questão de como um desenvolvedor front-end pode se destacar no mercado de trabalho atual, saturado de profissionais, especialmente com conhecimento em React. Os comentários sugerem algumas estratégias como aprofundar conhecimentos em arquitetura de software, design patterns e código limpo, além de contribuir com projetos open source. Outra sugestão é expandir as habilidades para o backend, aumentando assim as oportunidades. Um dos comentários propõe que a diferenciação pode não ser o objetivo principal, mas sim a contribuição para a comunidade e a própria valorização profissional.",
      "keywords": [
        "front-end",
        "diferenciação",
        "mercado de trabalho",
        "arquitetura de software",
        "backend",
        "open source",
        "contribuição"
      ]
    }
  },
  {
    "title": "[PITCH] Criei um SMTP Server para desenvolvimento",
    "link": "https://www.tabnews.com.br/gabrieldevgl/pitch-criei-um-smtp-server-para-desenvolvimento",
    "content": "Fala, galera! 👋\nMuitas vezes desenvolvo aplicações que necessitam de um envio de email, seja para validar um email no cadastro, ou então para avisar o usuário que houve um acesso a conta dele.\nPorém sempre durante o desenvolvimento, preciso criar um projeto no mailtrap, e ficar dependente dos limites de emails de teste.\nPensando em algo para facilitar minha vida, decidi criar um servidor SMTP que rode em localhost e que me mostre os emails que enviei do meu projeto em desenvolvimento. Então criei o devmail-server. Agora posso simular vários cadastros de usuários com emails diferentes e os emails chegarão todos no mesmo lugar, facilitando a visualização.\nSe você também tem ou já teve um problema do tipo, testa lá e me conta aqui oque achou.\nFeedbacks são sempre muito bem-vindos!\nLinks\nGithub: https://github.com/gabrielalves262/devmail-server\nNPM: https://www.npmjs.com/package/devmail-server\nInstalação\nnpm install -g devmail-server\n\nIniciar\nnpx devmail-server\n\nOpções\n\n--smtp-host: Porta do servidor SMTP. (default: '0.0.0.0')\n--smtp-port: Host do servidor SMTP. (default: 587)\n--host, -h: Porta do servidor Web. (default: '0.0.0.0')\n--port, -p: Host do servidor Web. (default: 3000)\n\nExemplo:\nnpx devmail-server --smtp-host \"127.0.0.1\" --smtp-port 2525 -p 8080\n\nExemplo utilizando nodemailer\nimport { createTransport } from 'nodemailer'\n\nconst main = async () => {\n  const mail = createTransport({\n    host: 'localhost',\n    port: 587,\n  })\n\n  await mail.sendMail({\n    from: { name: 'ACME', address: 'contact@acme.com.br' },\n    to: {name: \"John Doe\", address: 'john.doe@example.com'},\n    subject: 'Novo Login',\n    html: `<p>Olá! Foi efetuado um novo login na sua conta.</p>`,\n    attachments: [\n      {\n        filename: 'file.txt',\n        path: './file.txt'\n      },\n      {\n        filename: 'test.zip',\n        path: './test.zip'\n      },\n    ]\n  })\n}\n\nmain()\n  .then(() => console.log('done'))\n  .catch((err) => console.error(err))\n",
    "comments": [
      "Meus 2 cents:\nTai uma aplicacao interessante e um tanto fora da caixa.\nAqui na empresa nunca iriamos pensar neste tipo de app, pois temos nossos proprios servidores email (postfix+dovecot) com multiplos dominios para teste.\nMas para um dev solo ou mesmo uma empresa sem tanta infra (colocar um servidor SMTP so para testes e homologacao da uma certa mao de obra) - eh uma ideia bem legal.\nAnalisando agora, tavez seja interessante montar um docker com toda esta infra pronta (postfix/postfixadmin/dovecot/amavis/mysql/dkim/dnsmasq) para este tipo de situacao.\n(esquece, nao faz sentido - tem varias opcoes)\nParabens pela iniciativa - vou forkar !\nPS: Depois que escrevi este post, dei uma pesquisada e achei este \"smtp para dev\" (em .net, mas enfim):\n\nsmtp4dev\n\nOutros servicos para teste online de email:\n\n\nwpoven\n\n\nhttps://ethereal.email/\n\n\nfake-smtp-server\n\n\nmailosaur\n\n"
    ],
    "audio_path": "/tmp/[PITCH] Criei um SMTP Server para desenvolvimento.mp3",
    "summary": {
      "summary": "O artigo apresenta um servidor SMTP para desenvolvimento local, o 'devmail-server', com o objetivo de facilitar o teste de envio de emails em aplicações, eliminando a dependência de serviços externos e seus limites. A ferramenta permite simular múltiplos cadastros e visualizar os emails enviados em um único lugar. O autor disponibiliza links para o repositório no GitHub e para instalação via NPM, além de exemplos de uso. Os comentários consideram a aplicação interessante, especialmente para desenvolvedores individuais ou empresas com pouca infraestrutura. Um comentário aponta que empresas maiores geralmente já possuem servidores de email próprios para teste. O comentador sugere a criação de um container Docker com infraestrutura pronta, mas logo descarta a ideia devido a outras opções existentes, e fornece links para ferramentas similares e serviços de teste de email online.",
      "keywords": [
        "SMTP",
        "desenvolvimento",
        "email",
        "teste",
        "localhost",
        "servidor",
        "devmail-server"
      ]
    }
  },
  {
    "title": "[PITCH]AppTesteWeb - A Ferramenta Brasileira pra Codar HTML, CSS e JS! 🇧🇷✨🚀",
    "link": "https://www.tabnews.com.br/diversalizando/pitchapptesteweb-a-ferramenta-brasileira-pra-codar-html-css-e-js",
    "content": "Fala, galera dev! Chegou o AppTesteWeb, a alternativa brazuca e simples pra JSFiddle e CodePen! 🎯\nO que é isso? 🤔\nÉ um editor de código leve, feito com CodeMirror, que roda direto no navegador! 🌐 Nada de servidor caro, custo zero, e cheio de coisa boa pra quem curte criar páginas web rapidinho. Testa aí: usa.app.br/apps/TesteWeb.html! 🚀\nFuncionalidades que já tão bombando! 🔥\n\n[OK] 🪄 Indentação (Ctrl+I) e duplicar linha (Ctrl+D)\n[OK] 🤓 Sugestões de sintaxe automáticas\n[OK] 🎨 + de 60 Temas pra trocar\n[OK] 💾 Salvamento automático no navegador\n[OK] 👀 Preview ao vivo\n[OK] 📥 Exporta HTML, CSS ou JS\n[OK] 📐 Ajuste de resolução\n[OK] 🤓 Duplo clique na linguagem cria abas JS (JS1, JS2, JS3)\n[OK] 🔍 Busca por texto e regex (percorre os achados!)\n[OK] 🔁 Substituição por Simples e Regex\n[OK] 🗺️ Minimap pra navegar no código\n[OK] 💾 Sugestão de nome ao salvar\n\nNovidades Recentes! 🆕✨\nLançamento tá quase aí, e olha o que já tá pronto:\n\n[OK] 🔧 Fechamento automático de tags HTML\n[OK] 📥 Download de arquivos ajustado junta as Abas\n[OK] 🖱️ Posição do cursor e histórico de desfazer tinindo\n[OK] 📑 Abertura de abas mais suave\n[OK] 🖌️ Lembra a linha de edição ao trocar códigos\n[OK] 📂 Trabalha com vários projetos abertos ao mesmo tempo Lembre de salvar nome diferente!\n[OK] 📄 Criar novo projeto do zero com um clique\n\nFuturos Lançamentos (Tá vindo aí!) ⏳\nQuero deixar ainda mais top! Algumas ideias:\n\n🔗 Compartilhamento de código com link\n🎨 Barra laranja pra destacar linha editada\n\nBora Testar? 🚀\nÉ só acessar o link, codar e me contar o que achou! Tem vídeo também: YouTube. Esse projetinho tá novinho, mas já tá prontinho pra ajudar. Sugestões? Críticas? Manda ver, que eu ajusto! 😄\n\nFeito para você que usa.app.br!! Grandes coisas começam com pequenos códigos..🇧🇷🚀",
    "comments": [
      "Que projeto massa!!! Estou pensando em desenvolver algo semelhantes, mas com algumas funcionanlidades especificas. Vi que vocês fez um minimapa similar ao monaco. Como você fez isso?",
      "@vadolasi eu pego todo conteudo apenas texto do editor, forço quebra de linha, estico ele no minimap, uso filter scaleZ pra distorcer as letras. No canal pa se garimpar la mostro o codigo! foi feito em js puro tem outros melhores e mais completos em npm.",
      "E por que trocaria o CodePen por ele,.por exemplo? Me parece meio gambiarra e não parece ter os mesmos apelos dos concorrentes.",
      "Imagino que a intenção não é de fato ser uma alternativa comercial a esses outros editores."
    ],
    "audio_path": "/tmp/[PITCH]AppTesteWeb - A Ferramenta Brasileira pra Codar HTML, CSS e JS! 🇧🇷✨🚀.mp3",
    "summary": {
      "summary": "O artigo apresenta o AppTesteWeb, um editor de código brasileiro para HTML, CSS e JavaScript, que visa ser uma alternativa mais simples ao JSFiddle e CodePen. O editor roda no navegador, possui funcionalidades como indentação automática, sugestões de sintaxe, temas customizáveis, salvamento automático, preview ao vivo e opções de exportação. O autor destaca as novidades recentes, como o fechamento automático de tags HTML e melhorias na abertura de abas e no histórico de desfazer. Há planos futuros para incluir compartilhamento de código via link e destaque visual da linha editada. A discussão nos comentários inclui questões sobre a motivação para trocar alternativas já existentes como o CodePen pelo AppTesteWeb, e sobre a implementação de funcionalidades específicas, como o minimapa. Um dos usuários explica brevemente a implementação do minimapa utilizando JavaScript puro.",
      "keywords": [
        "AppTesteWeb",
        "editor de código",
        "HTML",
        "CSS",
        "JavaScript",
        "desenvolvimento web",
        "ferramenta brasileira"
      ]
    }
  },
  {
    "title": "Me diga o caminho correto.",
    "link": "https://www.tabnews.com.br/leegoo/me-diga-o-caminho-correto",
    "content": "fala pessoal. esse é meu primeiro post e tbm meu primeiro desabafo em relação as minhas indecisões... estou comecando na programação e nao sei por qual linguagem começar, na verdade eu sei, eu queria começar por golang, mas vi que golang tem muitas particularidades que fogem do padrão das demais linguagens, como a ausência de orientação a objetos e esse fato me fez cojitar que não é uma boa linguagem para começar já que foge de um dos principais tópicos da programação (orientação a objetos), então estou aprendendo c#, mas na real, c# (na minha opinião) é muito robusta para meu objetivo que é trampar com coisas relacionadas a rede e backend e isso meio que torna para mim a linguagem chata e cansativa, porque meu coração esta em outra lang. Em resumo, amo golang e suas aplicações, mas tenho medo de nao aprender o suficiente estudando golang. não sei se me expressei bem, alguém consegue me dar um rumo ?",
    "comments": [
      "Pode começar por aqui: https://www.tabnews.com.br/maniero/faq-do-programador-perdidao.\nGo não é OO porque OO não é tão importante quanto as pessoas acham. Uma boa linguagem para começar jamais teria OO que é algo complexo. Claro, até poderia ter, mas só se você pudesse não usar essa parte. O caminho correto é começar pelo começo, não pular para o que vem depois. As pessoas em sua maioria hoje querem o caminho correto? Não, elas só querem a sensação de estar no melhor, no que no todo mundo está falando, que geralmente é o oposto do caminho certo.\nEu gosto de C# e não acho ela chata e cansativa, pelo contrário, mas se você pode abrir mão da robustez, ótimo, só não vejo como fazer isso em rede, em backend, a não ser que seja algo muito bobo ou quase uma brincadeira, pode ter algo pouco robusto. Mas entendo que muita gente hoje acha que não precisa, por isso tem tanta coisa errada rodando por aí.\nSe você acha que aprender a programar é aprender uma linguagem, então você está muito no caminho errado. Este é outro motivo de ter tanta cosia errada por aí.\nQuando eu começar criar minha formação gratuita de desenvolvedores eu vou pelo caminho certo, mas sei que não farei muito sucesso, é muito mais legal e nem um pouco cansativo ir pelo caminho errado. Por isso tem tantos vendedores de curso ganhando muito dinheiro oferecendo o que as pessoas buscam, e não o que precisam. Educação envolve dor, mas vivemos uma época que se prega que as pessoas não podem sentir dor. Elas vãp sentir, na hora errada, por isso nunca se viu tantos problemas psicológicos como agora.\nS2\n\nFarei algo que muitos pedem para aprender a programar corretamente, gratuitamente (não vendo nada, é retribuição na minha aposentadoria) (links aqui no perfil também).",
      "\nEducação envolve dor, mas vivemos uma época que se prega que as pessoas não podem sentir dor. Elas vãp sentir, na hora errada, por isso nunca se viu tantos problemas psicológicos como agora.\n\nS2\nTouchê! comentário genial muito além da bolha tech e da educação!",
      "muito massa tua visão e na verdade faz o total sentido. Me condicionei a ir pelo caminho mais rapido e acho que a culpa disso é a velocidade em que as coisas estao acontecendo esses dias, um exemplo é o tal do micro sass que a galera tanto fala. muito obrigado pelo feedback, muito massa tua filosofia. fico grato, sucesso irmão...",
      "\"Não é tão importante\". Gostaria de enterder melhor teu ponto de vista já que todas as grandes aplicações Enterprise são OO.",
      "Isto é uma opinião ou um fato? Se for um fato, prove a sua afirmação. Quero ver você usar o método científico para dar sustentação a este argumento. Se for uma opinião, me diga por que tem ela para eu dar uma resposta melhor.",
      "POO só é o paradigma mais usado no mundo e \"não é tão importante\"?🤷",
      "Antes de mais nada, prove sua afirmação. Ou é só uma opinião dando a impressão que é uma afirmação?\nO fato de você achar isso não torna verdadeiro.\nEu vou esperar as provas para depois eu mostrar o erro monumetal que isso é e como é importante o que eu falo que as pessoas não podem treinar o erro, assim elas vão repetir o erro pra sempre, e até brigar pelo erro.\nQuando a base que a pessoa tem é errada, ela toma muitas decisões erradas. Nesse ponto até quem pede para pessoas aleatórias na internet decidirem por ela pode dar mais certo, porque pode ser que a decisão seja melhor. E quanto mais é a extensão da base errada mais ela teima nos erros.\nSe for só uma percepção já adianto ler isto: https://jornal.usp.br/atualidades/brasil-ocupa-o-2o-lugar-em-pesquisa-sobre-percepcao-de-realidade/.",
      "Eu também estou no caminho do backend, nos meus estudos, eu uso a linguagem mais como uma ferramenta pra aplicar o teórico que eu aprendi na faculdade/curso.\nSe você se interessa por uma linguagem, vai firme! Claro que tenha sempre um pé atrás com linguagens complexas, onde tu perde mais tempo aprendendo em como usar elas pra fazer o que você quer do que realmente fazendo o que você quer (já me ocorreu e aprendi amargamente com isso).\nEspero ter lhe ajudado um pouquinho com esse relato :)",
      "Acho que se a linguagem escolhida for bem fácil, você já iniciará o desenvolvimento o quanto antes de apps mais simples, não perdendo muito tempo aprendendo as particularidades da linguagem. Pra isso, Python e Go são boas opções porque são bem fáceis de aprender.\nÀ medida que você avançar para apps mais complexas, poderá mudar de linguagem (Java, C#). PHP e Ruby são linguagens relativamente fáceis, mas tem muitas particularidades, e pra quem tá iniciando pode ficar chato.\nAprender Python e Go, é aprender espanhol.\nAprender Java e C#, é aprender inglês.\nAprender PHP e Ruby, é aprender francês.\nAprender Rust e Zig, é aprender japonês.\nAprender C++, é aprender klingon.",
      "É uma bela visão da coisa. Lidarei com as dores do aprendizado e aos poucos espero me tornar um programador melhor... obrigado pelo teu feedback.",
      "Foque em ser um bom programador, a linguagem é só sintaxe! Comece pelo simples, crie projetinhos simples independente da linguagem, assim vc se torna um bom programador, a sintase vc pega rápido se preciso for..",
      "Sim... preciso enfiar na minha cabeça esse conceito de linguagem como ferramenta e nao como algo primordial para o sucesso. obrigado pelo feedback, irmão.",
      "Não existe caminho correto. Todos caminhos que são construídos dependem da pessoa, do momento, da vivência e da sorte.\nEntão na minha opinião, pare de ficar pensando demais no que é melhor, pq não existe melhor. Todas linguagens de programação assim como todos frameworks e softwares são apenas ferramentas. Apenas pegue o q vc gostar mais e vai fundo nela.\nPerder tempo achando o caminho perfeito só vai te prejudicar mentalmente, como vc mesmo está mostrando nessa indecisão, assim como está atrapalhando o que era pra vc focar: aprender a programar.\nEntão man, aprende golang já q vc está gostando dele, vai fundo sem arrependimentos. Emprego tem. E se um dia no futuro vc ve que não está dando certo, vai pra outro. Tenho certeza q o q vc aprender com golang, vc não vai jogar tudo no lixo para aprender outra linguagem. Pelo menos uns 50% do conteúdo de todas linguagens tem coisas em comum (ressalvos alguns bem especializados) e isso já é bastante. Então apenas estude e foque em aprender golang q vc irá se dar bem.",
      "Obrigado pelo teu feedback, pode ter certeza que contribuiu muito pra minha construção como programador, abriu me mente e de fato, isso tava me desgastando e eu tava começando a desgostar da programação, mas eu não consigo, é muito bom ver cada problema e cada solução, o mundo é infinito nessa área e domar a maquina é lindo dms... obrigado irmão",
      "Vou ser direto e reto: não vale a pena entrar no mundo da programação hoje. Poucas vagas para iniciantes, apesar do salário alto para os experientes, IA tomando cada vez mais as vagas básicas."
    ],
    "audio_path": "/tmp/Me diga o caminho correto..mp3",
    "summary": {
      "summary": "O artigo relata a indecisão de um programador iniciante sobre qual linguagem escolher, divido entre a paixão por Golang e o receio de que a ausência de orientação a objetos dificulte seu aprendizado. Os comentários oferecem diversas perspectivas: alguns defendem que a orientação a objetos não é crucial e incentivam o autor a seguir com Golang se é o que o motiva, enquanto outros argumentam que POO é fundamental, especialmente em grandes aplicações. Há também quem sugira focar nos fundamentos da programação, independentemente da linguagem, e encarar a linguagem como uma ferramenta. Alguns usuários compartilham suas experiências pessoais e oferecem conselhos práticos sobre como escolher a linguagem certa para o backend. Um usuário expressa uma visão pessimista sobre o mercado de programação para iniciantes devido à crescente automação por IA.",
      "keywords": [
        "golang",
        "c#",
        "linguagem de programação",
        "backend",
        "orientação a objetos",
        "carreira programação",
        "aprendizado"
      ]
    }
  },
  {
    "title": "Criei um blog e gostaria de monetizar, acham o adsterra uma boa?Existe opções melhores?",
    "link": "https://www.tabnews.com.br/lucascarvalhorocha/criei-um-blog-e-gostaria-de-monetizar-acham-o-adsterra-uma-boaexiste-opcoes-melhores",
    "content": "Gostaria de saber como posso monetizar meu blog, alternativas ao google que hoje anda muito burocratico.",
    "comments": [
      "Não tive boas experiências com o AdsTerra. Apesar da aprovação do site ser rápida e a implementação ser fácil, a qualidade dos anúncios não era boa, basicamente, bets e redirecionamento para site dúvidosos.\nPreferi parar de usar ele e esperar a aprovação do Google AdSense msm.",
      "sim é oque venho percebendo ele diminui a reputação do site.",
      "Olá, nunca utilizei, mas, ouvi falar que o Google penaliza sites que utilizam ele.\nAnalisa a Upeex.com pode rodar ela com o Google e outros sem problemas, a Upeex e brasileira!"
    ],
    "audio_path": "/tmp/Criei um blog e gostaria de monetizar, acham o adsterra uma boa?Existe opções melhores?.mp3",
    "summary": {
      "summary": "O autor do artigo busca alternativas ao Google AdSense para monetizar seu blog, questionando a eficácia do Adsterra. Os comentários revelam experiências negativas com o Adsterra, mencionando a baixa qualidade dos anúncios (apostas e redirecionamentos suspeitos) e o potencial de prejudicar a reputação do site, inclusive com possíveis penalizações pelo Google. Um comentarista sugere a Upeex como alternativa, alegando compatibilidade com o Google AdSense e outros serviços.",
      "keywords": [
        "monetização",
        "blog",
        "Adsterra",
        "Google AdSense",
        "qualidade de anúncios",
        "reputação do site",
        "Upeex"
      ]
    }
  },
  {
    "title": "[pitch]🔥 Nativium - Projeto para usar C++ em Mobile, Desktop e Web",
    "link": "https://www.tabnews.com.br/paulocoutinho/pitch-nativium-projeto-para-usar-c-em-mobile-desktop-e-web",
    "content": "Olá,\nFiz um projeto para usar C++ em Mobile, Desktop e Web.\nO repositório está aqui: https://github.com/nativium/nativium\nDescrição:\nNativium - Escreva uma vez e compile para qualquer plataforma\nO Nativium é um template modular multiplataforma para C++ que permite escrever um único código e compilá-lo para diversas plataformas. Com o Nativium, você pode gerar bibliotecas e executáveis que compartilham o mesmo código C++, facilitando o desenvolvimento e a manutenção.\nPlataformas Suportadas\n\nLinux\nmacOS\nWindows\nAndroid\niOS\ntvOS\nwatchOS\nmacCatalyst\nWeb Assembly (WASM)\n\nO binário gerado pode ser utilizado em um projeto novo ou existente, garantindo máxima flexibilidade e reaproveitamento de código.\nComo funciona?\nO Nativium se baseia em dois conceitos principais:\n\nMódulos: Definem quais códigos e dependências precisam ser compilados.\nTargets: Definem como o código será compilado (cada plataforma é um target).\n\nIsso significa que você pode escrever código específico para cada plataforma e, ao mesmo tempo, manter um núcleo de código C++ unificado. Por exemplo:\n\nUm código C++ pode se comunicar com a plataforma mobile (Java no Android e Objective-C no iOS) para obter o nível da bateria.\nUm código mobile pode chamar bibliotecas C++ para acessar o banco de dados ou fazer requisições HTTP.\n\nFerramentas utilizadas\nO Nativium utiliza um conjunto eficiente de ferramentas para facilitar o desenvolvimento:\n\nPython: Para automatizar scripts e comandos.\nCMake: Para organizar o código-fonte e compilar os projetos.\nConan: Para gerenciar e compilar todas as dependências C++.\nDjinni: Para gerar código intermediário entre C++ e plataformas mobile.\n\nComo começar?\nEste é um repositório template, pronto para ser utilizado como base para o seu próprio projeto. Ele permite que você foque no código, sem precisar se preocupar com a estrutura e organização do projeto C++.\nBasta baixar este template, conferir os aplicativos de exemplo e testá-lo em dispositivos móveis, desktops e na web.\nVantagens\n\nAutomação total: Todos os comandos para configurar, compilar, empacotar, gerar e distribuir podem ser executados via linha de comando.\nFlexibilidade: Pode ser usado com qualquer editor de código.\nExtensibilidade: Cada parte do código é separada por módulos, facilitando a adição de código personalizado ou bibliotecas C++ externas.\n\nDocumentação\nSaiba mais sobre o Nativium na documentação oficial:\n📖 Documentação Nativium\nDemonstração\nVeja a demonstração do WebAssembly (WASM) em funcionamento:\n🎮 Demo WebAssembly\nO Nativium facilita o desenvolvimento multiplataforma com C++, tornando a criação de aplicativos eficiente e estruturada. 🚀\nProjeto que usa o Nativium:\nMinha startup Ubook usa o Nativium e possui diversos ganhos, em performance e em velocidade da equipe em termos de desenvolvimento: https://www.ubook.com/",
    "comments": [
      "boa noite, sr\nnão sei nem o que dizer. era algo assim que eu estava procurando há uns meses, e agora encontrei. estou bastante grato, e fico contente porque já sei que funciona, pois já sei o ubook por meses.\nchequei que o sr está usando o SDL.\nvou tentar criar alguma coisa.\ne se o sr criasse mais documentação?\neu me perdi, e não entendi por onde começar dentro do projeto. em vez de eu ter de procurar sozinho, o sr poderia colocar um pequeno tutorial quanto a isso.\nquando eu achar aqui, vou tentar escrever uma resposta para meu comentário, ou fzr um post.\nprogramo em C++, e tô disposto a usar isto. será de grande ajuda, mesmo.",
      "Olá, que bom que gostou.\nPara começar, você só precisa do projeto https://github.com/nativium/nativium, o uso da SDL em outro projeto é apenas um teste usando o Nativium.\nNão sei em que sistema você está, mas basicamente você precisa disso para cada plataforma:\nhttps://nativium.s3.amazonaws.com/docs/requirements.html\nDepois você pode partir pra testar se está tudo funcionando aqui:\nhttps://nativium.s3.amazonaws.com/docs/how-to-start.html\nEu fiz um projeto depois que é uma evolução do Nativium, que é o XPLPC, que é o que uso atualmente e consigo muito mais robusto e simples de usar: https://github.com/xplpc/xplpc\nQualquer dúvida só falar.\nSe quiser, faz uma live e a gente usa o XPLPC em vídeo e assim fica gravado.\nAbraços."
    ],
    "audio_path": "/tmp/[pitch]🔥 Nativium - Projeto para usar C++ em Mobile, Desktop e Web.mp3",
    "summary": {
      "summary": "O artigo apresenta o Nativium, um projeto que visa facilitar o desenvolvimento multiplataforma em C++, permitindo a criação de aplicativos para mobile, desktop e web a partir de um único código-fonte. O projeto utiliza ferramentas como Python, CMake, Conan e Djinni para automatizar a compilação e gerenciamento de dependências. Um dos usuários expressou entusiasmo pela ferramenta, mencionando uma busca anterior por algo similar e demonstrando interesse em contribuir. Ele também sugere a criação de mais documentação para auxiliar novos usuários a iniciarem no projeto. O autor do projeto respondeu oferecendo links para documentação e mencionando um projeto mais recente e robusto chamado XPLPC. Ele ainda se ofereceu para fazer uma live demonstrando o uso do XPLPC.",
      "keywords": [
        "C++",
        "multiplataforma",
        "desenvolvimento mobile",
        "desktop",
        "WebAssembly",
        "Nativium",
        "XPLPC"
      ]
    }
  },
  {
    "title": "[pitch]🔥 XPLPC - Projeto para usar C++ em Mobile, Desktop, Web, Flutter, Python, Kotlin e outras plataformas",
    "link": "https://www.tabnews.com.br/paulocoutinho/pitch-xplpc-projeto-para-usar-c-em-mobile-desktop-web-flutter-python-kotlin-e-outras-plataformas",
    "content": "Olá,\nFiz um projeto para usar C++ em Mobile, Desktop, Web, Flutter, Python, Kotlin e outras plataformas.\nO repositório está aqui: https://github.com/xplpc/xplpc\nDescrição:\nXPLPC - Conectando Linguagens e Plataformas\nO XPLPC é um projeto inovador que conecta diferentes linguagens e plataformas, permitindo a transferência de dados serializados entre elas sem a necessidade de um servidor. Em vez disso, utilizamos a memória do próprio dispositivo, tornando o processo extremamente eficiente. Esse conceito é conhecido como Lite Procedure Call.\nComo funciona?\nA classe Platform Proxy é responsável por conectar as linguagens e plataformas, facilitando a transferência de dados diretamente na memória do dispositivo, sem depender do protocolo HTTP. Isso torna a comunicação entre diferentes ambientes mais rápida e fluida.\nCom o XPLPC, é possível, por exemplo, chamar um procedimento escrito em C++ a partir de um aplicativo mobile, ou o inverso, de maneira simples e integrada. Isso abre inúmeras possibilidades para desenvolvedores que precisam integrar diversas linguagens e plataformas sem complicação.\nPrincipais benefícios\n\nIntegração facilitada: Sem necessidade de servidores intermediários.\nAlto desempenho: Utiliza a memória do dispositivo para comunicação eficiente.\nSimplicidade: Não exige geradores ou ferramentas extras.\nPlug & Play: A biblioteca pode ser adicionada ao seu projeto sem necessidade de reescrita de código.\n\nComo usar?\nExemplo em C++:\nauto request = Request{\n    \"sample.login\",\n    Param<std::string>{\"username\", \"paulo\"},\n    Param<std::string>{\"password\", \"123456\"},\n    Param<bool>{\"remember\", true},\n};\n\nClient::call<std::string>(request, [](const auto &response) {\n    std::cout << \"Returned Value: \" << (response ? response.value() : \"Empty\") << std::endl;\n});\n\nExemplo em Kotlin:\nval request = Request(\n    \"sample.login\",\n    Param(\"username\", \"paulo\"),\n    Param(\"password\", \"123456\"),\n    Param(\"remember\", true)\n)\n\nClient.call<String>(request) { response ->\n    println(\"Returned Value: $response\")\n}\n\nExemplo em Swift:\nlet request = Request(\n    \"sample.login\",\n    Param(\"username\", \"paulo\"),\n    Param(\"password\", \"123456\"),\n    Param(\"remember\", true)\n)\n\nClient.call(request) { (response: String?) in\n    print(\"Returned Value: \\(response)\")\n}\n\nExemplo em WASM com Typescript:\nconst request = new XRequest(\n    \"sample.login\",\n    new XParam(\"username\", \"paulo\"),\n    new XParam(\"password\", \"123456\"),\n    new XParam(\"remember\", true),\n);\n\nXClient.call<string>(request).then((response : string | undefined) => {\n    console.log(\"Returned Value: \" + response);\n});\n\nExemplo em Flutter (Dart):\nvar request = Request(\"sample.login\", [\n    Param(\"username\", \"paulo\"),\n    Param(\"password\", \"123456\"),\n    Param(\"remember\", true),\n]);\n\nClient.call<String>(request, (response) {\n    print(response);\n});\n\nExemplo em Python:\nrequest = Request(\n    \"sample.login\",\n    [\n        Param(\"username\", \"paulo\"),\n        Param(\"password\", \"123456\"),\n        Param(\"remember\", True),\n    ],\n)\n\nresponse = Client.call(request)\nprint(response)\n\nPlataformas e Linguagens Suportadas\n\nC\nC++\nKotlin (Android, Desktop)\nSwift (iOS, macOS, tvOS, watchOS, Catalyst)\nWebAssembly\nFlutter (iOS, Android, Desktop)\nPython\n\nO XPLPC simplifica a integração entre linguagens e plataformas, proporcionando uma experiência otimizada para desenvolvedores. Explore essa tecnologia e leve seus projetos a um novo nível! 🚀\nPlataformas e Linguagens Suportadas\nWeb demo do XPLPC:\nURL: https://xplpc.github.io/wasm-demo/\nProjeto que usa o XPLPC:\nProjeto pessoal que usa o XPLPC para gerar texto, imagem e vídeo (C++, ggml, ffmpeg, stablediff, whisper): https://paulocoutinho.pages.dev/aikit/apple/",
    "comments": [],
    "audio_path": "/tmp/[pitch]🔥 XPLPC - Projeto para usar C++ em Mobile, Desktop, Web, Flutter, Python, Kotlin e outras plataformas.mp3",
    "summary": {
      "summary": "O artigo apresenta o XPLPC, um projeto que visa facilitar a integração de C++ com diversas plataformas e linguagens, incluindo Mobile, Desktop, Web, Flutter, Python e Kotlin. A proposta central é permitir a comunicação e transferência de dados serializados entre diferentes ambientes sem a necessidade de um servidor intermediário, utilizando a memória do dispositivo para maior eficiência. O autor demonstra exemplos de uso em C++, Kotlin, Swift, WASM (com Typescript), Flutter (Dart) e Python, destacando a simplicidade e o desempenho como principais benefícios. O projeto suporta diversas plataformas e linguagens, com demonstrações web disponíveis e um projeto pessoal que utiliza o XPLPC para geração de texto, imagem e vídeo.",
      "keywords": [
        "C++",
        "Mobile",
        "Desktop",
        "Web",
        "Flutter",
        "Python",
        "Kotlin"
      ]
    }
  },
  {
    "title": "Mozilla pede doações afirmando que está perdendo USD 3,5 milhões em fundos americanos",
    "link": "https://www.tabnews.com.br/aureliocasoni/mozilla-pede-doacoes-apos-perder-usd-3-5-milhoes-em-fundos-americanos",
    "content": "A Mozilla Foundation mandou um e-mail hoje para aqueles que tinham os e-mails cadastrados em sua base, pedindo doações extras, com a justificativa de estar perdendo mais de 3,5 milhões de dólares em fundos americanos em 2 projetos, em decorrência de \"interferências políticas\" (texto oriundo da mensagem enviada).\nO texto não cita diretamente qual agência americana vinha os recursos, mas há uma discussão em fóruns americanos e no Reddit que o dinheiro tenha vindo da USAID, entidade que está no centro das atenções da nova gestão americana.\nNa fonte abaixo, você pode verificar a íntegra do e-mail que recebi da própria Mozilla. Estou informando apenas para fins informativos, dado a relevância da Mozilla Foundation.",
    "comments": [
      "Muita cara de pau, com a diretoria recebendo milhões por ano...",
      "Faturam meio bilhão de dolares por ano. Fazem doações de boa parte desse montante que não tem relação direta com o desenvolvimento de apps, como o Firefox, pagam bonus milionários... e reclamam de dinheiro? Esse pessoal já se perdeu faz tempo.\nO Firefox foi muito importante no passado para tirar a Microsoft, com seu Internet Explorer, da inércia. Desenvolver para a web antes do Firefox era um inferno, e as coisas não evoluíam, até que o Firefox começou a fazer muito barulho.\nHoje possuem uma engine diferente do Chromium (que praticamente todo navegador usa - chrome, edge...), o que é importante para garantir que um monopólio como foi o da Microsoft não mantenha a web estagnada ou a leve para um rumo onde pode não ser tão interessante...\nMas em vez de investirem pesado no Firefox, em sua evolução, em seu marketing, foram por outro caminho.",
      "Ss eu tivesse dinheiro eu daria fácil, não por causa do motivo mas sim como agradecimento por os caras terem criado o Firefox. Eu simplesmente amo o Firefox tão bonito e de certo ponto até minimalista se a pessoa preferir"
    ],
    "audio_path": "/tmp/Mozilla pede doações afirmando que está perdendo USD 3,5 milhões em fundos americanos.mp3",
    "summary": {
      "summary": "O artigo relata um pedido de doações da Mozilla Foundation devido à perda de 3,5 milhões de dólares em fundos americanos, atribuída a \"interferências políticas\". A possível origem dos fundos seria a USAID. Os comentários expressam críticas à gestão da Mozilla, questionando seus gastos e bônus milionários, apesar do pedido de doações. Alguns usuários mencionam o faturamento anual da empresa e a alocação de recursos para áreas não diretamente ligadas ao desenvolvimento do Firefox. Outros comentam sobre a importância histórica do Firefox em desafiar o monopólio do Internet Explorer e impulsionar a evolução da web. Apesar das críticas, há quem expressa gratidão pelo Firefox e manifesta disposição em doar, caso tivesse condições financeiras.",
      "keywords": [
        "Mozilla",
        "doações",
        "financiamento",
        "Firefox",
        "USAID",
        "interferência política",
        "navegador"
      ]
    }
  },
  {
    "title": "Atualização de firmware impede funcionamento de impressoras HP",
    "link": "https://www.tabnews.com.br/NewsletterOficial/atualizacao-de-firmware-impede-funcionamento-de-impressoras-hp",
    "content": "A HP lançou no último dia 4 a atualização de firmware versão 20250209 para os modelos LaserJet MFP M232-M237, também comercializados no Brasil. Segundo a empresa, a atualização inclui correções de segurança, melhorias gerais e ajustes de desempenho.\nNo entanto, diversos usuários relataram que suas impressoras deixaram de funcionar após a atualização, mesmo quando utilizam toners originais da HP. Os afetados dizem enfrentar uma mensagem de “Error Code 11” e notam a luz do toner piscando ao tentar imprimir, mesmo após tentativas de limpeza dos contatos e reinstalação do cartucho.\nA HP está ciente do problema e afirma estar trabalhando em uma solução. A empresa recomenda que clientes impactados entrem em contato com seu suporte oficial.",
    "comments": [],
    "audio_path": "/tmp/Atualização de firmware impede funcionamento de impressoras HP.mp3",
    "summary": {
      "summary": "A HP lançou uma atualização de firmware (versão 20250209) para os modelos LaserJet MFP M232-M237, alegando correções de segurança e melhorias. No entanto, usuários reportaram que a atualização impede o funcionamento das impressoras, mesmo com toners originais, apresentando um \"Error Code 11\". A HP está ciente do problema e trabalhando em uma solução.",
      "keywords": [
        "HP",
        "impressora",
        "firmware",
        "atualização",
        "LaserJet",
        "M232-M237",
        "Error Code 11"
      ]
    }
  },
  {
    "title": "Dev REACT criando Aplicativos Nativos em Kotlin (Android)",
    "link": "https://www.tabnews.com.br/GuilhermeFT/dev-react-criando-aplicativos-nativos-em-kotlin-android",
    "content": "Rapaz... Pensa num menino que ralou igual suvaco de aleijado.\nMas vamos pro contexto.\nHá muito tempo atraz eu ingressei no Instituto Federal de Mato Grosso (IFMT) para fazer um curso técnico em Informática integrado ao Ensino Médio. Nessa fase, tive muito aprendizado na área, uma das melhores fases da minha vida pois tudo era novo. Fiz vários projetos lá dentro, e um deles foi um Aplicativo Android para ajudar os alunos da instituição a calcularem o tanto de nota que precisavam tirar para passarem de ano (Olha o nível do problema).\nPerfeito... Estava estudando Java no segundo ano e o professor de uma disciplina de Projeto Integrador (matéria que fica a critério do professor definir o que será ensinado) tinha definido algo que eu não lembro muito bem, que me permitiu ter a ousadia de criar apps para Android.\nComecei a criar algo extremamente básico em Java no Android Studio, disponibilizei para o grupo da minha sala com um link compartilhável no Google Drive. Muitas pessoas utilizaram, principalmente no final do ano. Migrei ele depois para Kotlin pois o Google tinha definido essa linguagem como a principal na época, coloquei ele na Google Play e adicionei Ads. Ganhei 14 dólares, mas não consigo tirar porque precisava fazer no mínimo 100 para poder resgatar.\nEnfim. Saí do Instituto formado e a vida seguiu. Minha Stack foi naturalmente para o React, TypeScript por conta do momento que estávamos passando naquela época. Fase boa também. Criei vários sites legais para empresas, criei soluções para Apresentadores de TV, entrei numa empresa quase global e criei diversas soluções e sistemas para grandes empresas gringas, enfim. Nada a reclamar.\nMas surgiu uma demanda para Criar um app com Reconhecimento Facial, tentei fazer em React Native (RN) mas não teria a otimização necessária para o projeto. Solução? Voltar na época de Dev Mobile Nativo.\nPensa num caboquinho que apanhou. MVC? MVVM? Que coisas são essas?. Como estrutura as pastas? O que é domain, repository? Injeção de Dependência???\nCara. Conceitos muito comuns na área dev. Arrisco-me dizer que são básicos (acompanho muitos canais techs e vejo falar muito sobre). Mas como na minha stack eu \"não precisava\", nem ia pesquisar sobre.\nEm Kotlin, Data class sealed class. Rapaz... Tudo que existe na programação \"tradicional\", conceitos de linguagens fortemente tipada, com paradígmas definidos, esqueci TUDO mermão. Não lebrava de nada. Uma feature era uma vida para botar no ar. Enviar arquivos pra uma rota de API não era mais só chamar um FormData e chamar um fetch da vida. Lidar com imagens das cameras dos rostos detectados? Um sofrimento. Bitmaps, FloatArray para IAs. Enfim...\nOs novos tempos, ou talvez o foco com que eu fui em minha carreira, me fizeram esquecer de conceitos e coisas básicas para ser considerado um Dev mediano em outras Stacks mais consolidadas.\nFoi um processo importante para mim enxergar essas mudanças que teve principalmente para a minha carreira. Sei que tenho focado em desenvolvimento web e de qualquer maneira esse gap iria acontecer. Mas bateu forte kkk\nFoi um experiência bacana, percebi o quão eu estava estagnado. Chega uma hora no React/Next.js que tudo é mais do mesmo. Estilo um CRUD da vida. Sempre o mesmo processo.\nConclusão disso tudo?\nSei lá, só fiquei com mais dúvidas. Mas pretendo começar a por um pézinho com mais frequência em linguagens mais consolidadas, até porque competir como dev Frontend hoje em dia no mercado de trabalho tá complicado.",
    "comments": [
      "Eu li na internet um conselho mais ou menos assim:\n\"se você faz o que você sempre faz\nvocê obtém o que você sempre obtém\"\nNesse seu caso você pensou fora da caixa e arriscou. Isso é legal."
    ],
    "audio_path": "/tmp/Dev REACT criando Aplicativos Nativos em Kotlin (Android).mp3",
    "summary": {
      "summary": "O autor do artigo relata sua experiência como desenvolvedor React ao se deparar com a necessidade de criar um aplicativo nativo em Kotlin para Android, envolvendo reconhecimento facial. Ele relembra sua experiência inicial com desenvolvimento Android durante o ensino técnico, mas destaca as dificuldades encontradas ao retornar ao desenvolvimento nativo após anos focado em React e TypeScript. O autor menciona a complexidade de lidar com conceitos e paradigmas de linguagens fortemente tipadas, além de desafios específicos como manipulação de imagens e integração com APIs. A experiência o leva a refletir sobre a importância de se manter atualizado com diferentes tecnologias e a considerar a diversificação de suas habilidades para além do desenvolvimento frontend. Um dos comentários reforça a importância de sair da zona de conforto e arriscar em novas áreas para evoluir.",
      "keywords": [
        "React",
        "Kotlin",
        "Android",
        "desenvolvimento mobile",
        "frontend",
        "aprendizado",
        "carreira dev"
      ]
    }
  },
  {
    "title": "Meu primeiro SaaS",
    "link": "https://www.tabnews.com.br/guileonidev/meu-primeiro-saas",
    "content": "🚀 Meu primeiro SaaS (ou micro SaaS… calma, ainda estou começando! 😆)\nSim, depois de muito tempo aprendendo e construindo soluções, senti que chegou o momento de criar algo grandioso, aplicando tudo que aprendi nessa jornada na programação. E nada melhor do que um projeto que exige dedicação total: front-end, back-end, infraestrutura… tudo que um dev ama trabalhar! Mas sei que os desafios vão muito além do código.\nO primeiro commit não foi recente—essa ideia já está na minha cabeça há mais de um ano! Hoje, minha solução já conta com:\n✅ +140 testes unitários\n✅ 40 testes E2E\n✅ +150 commits no GitHub\nTudo isso porque, lá atrás, eu decidi me tornar full-stack. 😆\nA faculdade e outras prioridades acabaram roubando um pouco do meu tempo, então nem sempre consegui me dedicar 100%, mas agora decidi sair da “caverna” do código. Não faz sentido criar um monte de features incríveis se só eu e meu repositório Git conhecemos. Quero compartilhar tudo o que venho construindo!\nMeu SaaS tem um foco claro: processar agendamentos online. A ideia surgiu depois de ouvir várias reclamações (especialmente de barbeiros) sobre como as soluções atuais não atendem totalmente suas necessidades e, pior, nem sequer ouvem suas dores. Como um bom \"aspirante a indie hacker\", vi uma oportunidade de unir o útil ao agradável e construir algo que realmente atendesse suas expectativas.\nAinda há uma longa jornada pela frente, e, mesmo que no final das contas minha conta no Stripe permaneça em R$0,00, já sei que a maior conquista será e foi o conhecimento adquirido.\nA partir de agora, vou compartilhar tudo por aqui: novas features, desafios, aprendizados… Afinal, de que adianta saber resolver problemas complexos e criar soluções incríveis se ninguém sabe quem você é?\n👋 Eu sou Guilherme Leoni, e estou construindo um SaaS especializado em agendamentos.\n🔧 O que estou usando:\n💻 Front-end: Next.js\n⚙️ Back-end: NestJS, Prisma, Clean Architecture\n🗄 Banco de dados: PostgreSQL\n👉 Vou compartilhar cada detalhe lá no Twitter (X), então já me segue por lá -> https://x.com/gui_leoni14",
    "comments": [
      "Minha dica é: nunca, jamais faça agendas online, sistema de e ecommerce e erp. Na hora de perguntar para o barbeiro ele compra até a mãe. Mas na hora de vender realmente, é quase impossível. Essas soluções existem em cada esquina.",
      "Acredito que o principal ponto aqui é o aprendizado.\nTodos nós já erramos, e estamos em constante aprendizado.\nQuantas você errou e aprendeu? Não conheço você, mas com certeza você,  assim como todos nós, já fizemos isso: aprendeu a partir de um erro.\nNão vejo nenhum problema a pessoa fazer um sistema de agendamento. Tem tanta gente por aí que não faz um décimo do que o rapaz do post fez. E olha quanta coisa ele está aprendendo.\nSe ele fizer, na próxima, um bot de WhatsApp (que você tanto comenta em suas publicações), vai aprender coisa nova.\nNo fim, ele se moveu pra ir atrás de conhecimento.",
      "Concordo.\nInternet é assim. Todo mundo tem todas as respostas. Sabe o que funciona, o que não funciona. Sabe o que o mercado quer. Sabe o segredo pra um SaaS faturar 7 dígitos.\nA Internet é cheia de opinião, mas nem tão cheia assim de experiência.\nO problema é que a maioria expressa opinião como se fosse experiência.",
      "Muito legal man, parabens pelo primeiro projeto, o primeiro é o mais marcante 🚀🚀🚀 Sucesso!!!"
    ],
    "audio_path": "/tmp/Meu primeiro SaaS.mp3",
    "summary": {
      "summary": "O artigo descreve a jornada do autor no desenvolvimento de seu primeiro SaaS, focado em agendamentos online, motivado por reclamações sobre as soluções existentes. Ele detalha o uso de tecnologias como Next.js, NestJS e PostgreSQL, enfatizando o aprendizado como principal objetivo. Os comentários divergem: um usuário adverte sobre a dificuldade de vender soluções de agendamento, enquanto outros enfatizam o valor do aprendizado prático e criticam o excesso de opiniões sem experiência na internet. Há também um comentário de apoio ao projeto.",
      "keywords": [
        "SaaS",
        "agendamento online",
        "desenvolvimento full-stack",
        "Next.js",
        "NestJS",
        "Prisma",
        "PostgreSQL"
      ]
    }
  },
  {
    "title": "Como minha biblioteca chegou ao top trendings do GitHub",
    "link": "https://www.tabnews.com.br/thalissonvs/como-minha-biblioteca-chegou-ao-top-trendings-do-github",
    "content": "Olá pessoal, esse é meu primeiro post na plataforma e quero contar um breve relato de algo que foi gaming change para minha carreira.\nEu trabalho com automação web a uns bons anos. Desde sempre utilizei ferramentas como selenium, playwright, e até o puppeteer. Trabalhei com automações para redes sociais, e hoje trabalho em uma empresa que gerencia frotas de veículos em larga escala.\nDurante minha jornada nesse novo trabalho, encontrei diversos desafios, como sites com sistemas anti-bots muito fortes. Foi aí que me veio a ideia de tentar algo realmente indetectável por sistemas de captcha comuns. Decidir chamar de PyDoll , um pouco inspirado no puppeteer, confesso haha.\nNão vou entrar em detalhes da implementação, mas resolvi ir bem além de algo simples. Desenvolvi uma alternativa completa para selenium e similares, com um boost de funcionalidades a mais. Um dos grandes destaques é que, utilizando o PyDoll, conseguimos passar por captchas invisíveis como ReCAPTCHAv3 de maneira natural, e até captchas como cloudflare.\nForam 5 meses de desenvolvimento nas minhas horas livres, mas o resultado foi incrível. Bom, finalizei a biblioteca a cerca de 1 mês atrás, mas não tinha feito nenhuma divulgação. Bastou um simples post no reddit, que tudo mudou. O repositório chegou ao top 1 nos trendings do GitHub, e eu não poderia estar mais feliz! Faz apenas 1 dia, mas isso já me abriu diversas portas.\nQueria deixar aqui esse relato para incentivar a comunidade brasileira a entrar no mundo do opensource. A comunidade é simplesmente incrível e já tenho recebido diversas colaborações no projeto. Quem tiver interesse em entrar nesse mundo, irei abrir umas issues mais simples.\nPor último, deixo meu agradecimento ao r/brdev e a toda a comunidade brasileira que me apoiou nesse projeto, vocês são demais!",
    "comments": [
      "Parabéns, vi essa lib olhando as trend do github mas nem olhei que era um br, só olhei a boa organização de código e o minimalismo de depências dele. Só senti falta de uma documentação de uso mais completa, mas sei que ainda está no começo.",
      "Eu atualizei a documentação ontem, agora está bem completa, dá pra entender mais sobre o potencial dela",
      "Salve Thalisson!!\nParabéns pelo trabalho e obrigado pela grande contribuição para a área de automação!\nJá estou testando os recursos para utilizar no meu próximo projeto.\nSeria interessante assistir ou vídeo ou uma postagem sobre os detalhes da implementação.",
      "eu nao sou muito bom com essas coisas haha. Mas vou preparar um material mais completo explicando cada detalhe da implementação, e facilitar pra contribuições, só preciso de um pouco de tempo livre",
      "Parabéns amigo, acompanhei o desenvolvimento dessa sua lib e de fato é muito útil, não tive ainda muito tempo livre para contribuir com algo, mas deixei uma estrelinha lá e o fork para futuras contribuições.",
      "Usar o conhecimento para transpassar um Captcha, é isso mesmo ?\nEu nao enxergo com bons olhos isso e em uma seleção de pessoas, se eu visse que no currículo a pessoa teria trabalhado com isso, isso seria um ponto contra eu querer selecionar a pessoa.",
      "Transpassar capchas é muito necessário e muitos ERPs principalmente da área contábil usam. Sites como JusBrasil , consulta de cnpj entre outros que provavelmente tu ja usou só são possíveis por que alguem conseguiu bypasses a verificação de bot. Ademais, alguem que consegue fazer isso é um profissional acima da média. Se tu não contrataria os teus concorrentes ficariam muito felizes por isso",
      "Bom, tudo tem dois lados. E sobre acessibilidade? Eu por exemplo, como falei, trabalho em uma empresa que extrai orgãos públicos. Tentamos contato para solicitar API de maneira formal e pouquíssimos responderam. É um serviço que devia ser facilmente acessível. Imagine uma pessoa que tem mais de mil veículos para gerenciar, essa pessoa precisa realmente acessar os orgãos públicos todos os dias para verificar se tem alguma infração? Uma automação é essencial. Não temos serviços oficiais, nem APIs oficiais.\nVamos para mais um exemplo, WhatsApp. Sabemos que a API é paga, e nem toda empresa tem condições para pagar. Uma automação utilizando uma biblioteca é realmente ruim? Fica a dúvida.\nDessa forma, você também não contrataria um hacker ético, já que ele provavelmente já teve que lidar e bypassar captchas.\nTudo depende da intenção do usuário e saber utilizar de forma ética.",
      "Ok, talvez eu tenha visto só o lado negativo.\nExiste uma linha tênue entre utilidade ou ferramenta para usos errados.\nCaptcha existe para proteger sistemas.\nAlguém sempre está pagando a conta, captcha ajuda a um serviço ficar no ar.\nSem captcha, robots, crawlers, etc, fazem abuso na API, gerando custos astronômicos.\nÉ justo essa pessoa pagar esta conta ? Não.\nPor outro lado entendo que você tentou o canal oficial e ele inexiste. Complicado.",
      "Se uma API/website depende unicamente de um capcha para evitar ser abusado então o problema é muito maior.",
      "Eu vi seu projeto no Reddit, achei muito bacana! Parabéns pelo resultado.",
      "Primeiro post que apareceu pra mim no reddit foi o seu kkkk, parabéns e sucesso mano!",
      "Legal, parabéns pelo projeto lhe desejo sucesso."
    ],
    "audio_path": "/tmp/Como minha biblioteca chegou ao top trendings do GitHub.mp3",
    "summary": {
      "summary": "O artigo relata a experiência do autor no desenvolvimento da biblioteca PyDoll para automação web, destacando sua capacidade de superar sistemas anti-bot como ReCAPTCHAv3 e Cloudflare. O projeto alcançou o topo dos trending do GitHub após uma postagem no Reddit, impulsionando a carreira do autor e abrindo portas para colaborações. Os comentários variam entre elogios à organização do código e usabilidade da biblioteca, pedidos por documentação mais completa (já atendido pelo autor), e discussões sobre a ética de burlar sistemas de captcha. Alguns usuários questionam se a ferramenta pode ser usada para fins maliciosos, enquanto outros argumentam que ela é essencial para acessar dados de órgãos públicos que não oferecem APIs adequadas ou para empresas que não podem pagar por APIs de serviços como o WhatsApp. A discussão também aborda a responsabilidade dos desenvolvedores em garantir o uso ético de suas ferramentas, e a importância de APIs bem estruturadas para evitar a necessidade de soluções alternativas.",
      "keywords": [
        "automação web",
        "PyDoll",
        "GitHub trending",
        "bypass captcha",
        "opensource",
        "API",
        "ética em automação"
      ]
    }
  },
  {
    "title": "[PITCH] Criei um Aplicativo para Meu Pai, e hoje ele tem mais de 500 usuários",
    "link": "https://www.tabnews.com.br/KeidsonFunctionDev/pitch-criei-um-aplicativo-para-meu-pai-e-hoje-ele-tem-mais-de-500-usuarios",
    "content": "Como surgiu a ideia?\nA ideia de criar o \"Já Pagou?\" foi a atender a necessidade do meu pai, um senhor com mais de 60 anos, mas isso não tem haver com idade. É apenas um caso de um senhor, que não tem o costume de usar apps, para resolver problemas do seu dia-a-dia, ele precisava lembrar a data de pagamento de alguma fatura e sempre deixava passar um ou dois dias, as vezes mais e então pagava com juros, isso o frustava muito, então perguntei para ele \"pai, se você tivesse um aplicativo que te lembra-se do vencimento de uma conta, ajudaria?\", \"com certezaaa... e eu me livraria do meu caderninho kkk\"\nbaixe o app em https://play.google.com/store/apps/details?id=com.keidsonroby.appjapagou&hl=pt_BR",
    "comments": [
      "Eu atualmente estava utilizando uma planilha pra fazer esses lembretes. Baixei o app e me surpreendi pela maior praticidade que o teu aplicativo oferece.\nMas vem cá, essas informações são salvas localmente no celular ou vc utiliza algum banco de dados? Não encontrei a política de uso de dados do app, por isso vim questionar sobre esse ponto",
      "Por curiosidade achei no GitHub dele, ele utilizou o local storage para armazenar os dados.\nconst storedBills = localStorage.getItem('bills');\n\nhttps://github.com/keidsondesigner/angular-ionic-app-ja-pagou/blob/9230c43c2774abe47b8b82dff0e2d82726df0562/src/app/services/bill.service.ts#L19C27-L19C39",
      "A versão atual é em React Native",
      "Storagte local do dispositvo",
      "Daora dms esse processo que rolou! Meus parabéns pela ideia e projeto, muito sucesso na jornada!\nSó uma duvida usou oque pra desenvolver o app?",
      "Comecei com Angular + Ionic, mas para facilitar o deploy resolvi seguir com React Native",
      "Muito bom, agora deu vontade de copiar você kkkk, o app ficou bonito, eu sou ruim de design de apps, o teu chama a atenção, gosto de apps que avisam com notificações.",
      "Caramba, que demais! Foi uma ótima sacada! E o design do app ficou muito bacana!",
      "valeu mestre!",
      "Que legal, me chama no disc pra gente bater um papo? meu disc: anderpru",
      "cara parabéns de verdade, eu estava com uma ideia nos ultimos dias de algo como isso mas eu estava focado em prestadores de serviço como psicologo ou dentista por exemplo.\nPor exemplo, eu faço consultas toda semana ou a cada 15 dias, o pagamento nem sempre é na mesma consulta as vezes eu passo e pago duas anteriores ou as vezes eu já deixo a proxima paga, estava pensando em um app que conectava tanto o cliente como o prestador de serviço, onde ele pudesse programar os pagamentos e ambos terem um controle de quando foi pago oq e quais já estão acertados, talvez tbm com uma integração com o google agenda tbm para marcar horarios etc...\nBom é um projeto que ainda n iniciei kkkk n sei se vc vê seu projeto como um projeto de estudo open source onde n teria problema por exemplo eu fazer um fork ou fazer um pr para adicionar esse tipo de funcionalidades, mas se vc tiver interesse e quiser deixar o link por aqui kkkk\nse não fica aqui minha ideia que talvez eu leve pra frente nos proximos meses ou n né quem sabe kkkkk",
      "Muito legal a ideia e o aplicativo, como fez com as notificações? Usou expo push notifications, firebase ou outra lib?",
      "muito obrigado! usei o expo-notifications"
    ],
    "audio_path": "/tmp/[PITCH] Criei um Aplicativo para Meu Pai, e hoje ele tem mais de 500 usuários.mp3",
    "summary": {
      "summary": "O artigo relata a criação de um aplicativo para ajudar o pai do autor a lembrar de pagar suas contas, evitando juros por atraso. O aplicativo, chamado 'Já Pagou?', teve boa aceitação, alcançando mais de 500 usuários. Nos comentários, usuários elogiam a praticidade e o design do aplicativo. Surgem dúvidas sobre o armazenamento dos dados, que é feito localmente (localStorage). Alguns usuários compartilham ideias para expandir o app, como integrar funcionalidades para prestadores de serviço e agendamento de pagamentos. A tecnologia utilizada no desenvolvimento foi inicialmente Angular + Ionic, migrando para React Native para facilitar o deploy. A implementação de notificações também é um ponto de interesse dos usuários.",
      "keywords": [
        "aplicativo",
        "lembrete de pagamento",
        "React Native",
        "Angular",
        "Ionic",
        "localStorage",
        "gerenciamento de contas"
      ]
    }
  },
  {
    "title": "[PITCH] Treinei um pequeno LLM para escrever commits do Git offline",
    "link": "https://www.tabnews.com.br/VictorTavernari/pitch-cansei-de-escrever-git-commits-chatos-e-criei-uma-ia-offline-que-faz-isso-por-mim",
    "content": "Boa noite, pessoal do TabNews!\nJá faz um ano que sou entusiasta desse mundo dos LLMs locais open-source. Geralmente, gosto de manter meus commits pequenos e com mensagens claras quando trabalho em equipe. Por isso, quando o ChatGPT lançou a ferramenta GPTs, criei um modelo dedicado a escrever commits: o Git Commit Message Pro. Porém, encontrei uma limitação relacionada à privacidade. Foi aí que comecei a explorar o fine-tuning para criar um LLM local que pudesse gerar um rascunho inicial, necessitando apenas pequenas alterações posteriores. Utilizando o Ollama, montei o tavernari/git-commit-message.\ntavernari/git-commit-message\nNa primeira versão, utilizei como base o modelo Mistral de 7B, que ocupa aproximadamente 4.4 GB, podendo ser pesado dependendo das especificações da máquina. Embora funcionasse, os resultados ainda não eram satisfatórios o suficiente e eram lentos na geração das respostas.\nRecentemente, tivemos um hype em torno do DeepSeekR1, um modelo menor que foi treinado para \"pensar\" melhor. Inspirado por essa ideia, resolvi criar minha própria versão reduzida focada especificamente em escrever commits.\nEsta foi minha primeira experiência com fine-tuning. Apesar de ainda não considerar o resultado ideal, acredito que com mais tempo dedicado ao treinamento e refinamento da técnica, será possível atingir um nível aceitável.\nAssim, surgiu a versão \"reasoning\" do modelo: tavernari/git-commit-message:reasoning. Essa versão utiliza um modelo de apenas 3B (1.9 GB) com capacidade de raciocínio aprimorada. Além disso, criei outra versão com Chain of Thought (Chain of Thought), que também apresentou bons resultados, embora ainda não tenha sido explorada a fundo.\nAqui estão exemplos comparativos de desempenho no mesmo computador:\nVersão 7B - Mistral\n\nVersão 3B - Qwen (Reasoning)\n\nVersão 3B - Llama (Chain of Thought)\n\nGit Commit Message Agêntico\nApesar do bom funcionamento, o modelo tinha dificuldades com contextos grandes. Por isso, criei um script agêntico que avalia os diffs do git por etapas, permitindo gerar commits sem que o LLM se perca no processo.\nAs funcionalidades do script incluem:\n\nAdicionar contexto ao LLM para melhorar a escrita do commit;\nEditar a mensagem antes da confirmação;\nGerar apenas a mensagem (com a opção --only-message).\n\nInstalação fácil pelo terminal, tem a explicação no perfil do modelo tavernari/git-commit-message\n\nObjetivo do projeto\nMinha meta com este modelo é proporcionar mensagens de commit suficientemente boas, que exijam apenas pequenos ajustes manuais e que funcionem totalmente offline, mantendo seu trabalho intelectual seguro e protegido.\nInvesti alguns recursos financeiros para realizar o fine-tuning, com o objetivo final de oferecer algo útil para a comunidade. Futuramente, pretendo dedicar mais tempo ao treinamento e refinamento para elevar a qualidade.\nA ideia é oferecer uma ferramenta prática, eficiente e, principalmente, que mantenha seu trabalho protegido e seguro.\nFiquem à vontade para usar, sugerir e colaborar!\nMeu hugginface https://huggingface.co/Tavernari/git-commit-message\nAbraço!",
    "comments": [
      "Eu gostaria de criar um para servir como copilot ao de 1.5b a 3b, só que não sei como fazer isso.\nPois quero treina-lo com as docs e projetos em uma linguagem especifica, que até o momento só o claude sonet conhece essa linguagem, e além disso queria algo bem personalizado e com propriedade sobre a linguagem.\nFaz um vídeo ou um tuto por aqui de como treinar? please!",
      "Pra fazer fine tuning você pode usar unsloth.ai.\n\nPois quero treina-lo com as docs e projetos em uma linguagem especifica, que até o momento só o claude sonet conhece essa linguagem, e além disso queria algo bem personalizado e com propriedade sobre a linguagem.\n\nTreinar um modelo é uma tarefa cara e exige muitas horas e expertise.\nExiste uma diferença no termo \"treinar\" e \"ajustar\" (Fine Tuning)!\nFine Tuning\nDescartando a possibilidade de treino para nós meros mortais, vamos para o fine tuning.\nQuando você treina um modelo, vc cria o que chamamos de \"weights\" (pesos), então estes pesos vão guiar o modelo treinado a escolher um próximo token, dito isso, o processo de fine tuning é ajustar estes \"pesos\" para que o próximo token venha conforme seu estilo.\nBaseado no seu input, fine tuning não vai ensinar novos dados ao modelo, ele vai ajustar o peso para o modelo responder conforme sua necessidade, vou dar um exemplo.\nVocê pode fazer fine tuning para seu modelo sempre responder com emojis, e então ele vai aprender que depois de certas expressões ou no lugar de certa expressões deveria usar emojis, e vc vai especializá-lo nisso.\nRetrieval-Augmented Generation (RAG)\nEsta é a técnica recomendada para \"adicionar\" novas informações ao modelo.\nDito isso é melhor você estudar como implementar um RaG para poder então plugar sua documentação e dar poder ao seu sistema de consultá-la.\nEste cara é um dos fundadores do Ollama e ele tem um curso totalmente grátis sobre esses temas, então recomendo assistir.\n\nFaz um vídeo ou um tuto por aqui de como treinar? please!\n\nhttps://www.youtube.com/watch?v=1XCEZW_Twr0",
      "pode instalar o ollama do site ollama.com ele já abstrai grande parte do trabalho com llms, aí tu pode baixar modelos como imagens docker por exemplo ollama run llama3.2\nEle vai baixar e rodar o modelo. Além de disponibilizar o acesso através de uma api no localhost:11434.\nPara usar no vscode,  tem uma extensão muito boa que pode encontrar no site continue.dev, ela permite adicionar modelos via llm para autocomplete de código além de uma interface na lateral para conversar com o modelo similar com o gpt.",
      "Victor, muito bom! Parabéns pelo projeto e obrigado por compartilhar.\nCom certeza vou testar por aqui.\nAté o momento tenho usado o Claude Sonnet para criar mensagens melhores para diffs maiores e tem servido muito bem. Dependendo da situação eu direciono melhor o que quero, mas na maioriadas vezes só peço escrever uma mensagem mais detalhada e o resultado é muito bom.\nMais uma vez, muito obrigado por compartilhar.",
      "Obrigado 🙏\nSe você está acostumado com Claude, vais sofrer um bocado com um modelo de 3B de parametros, mas adoraria escutar seu feedback sobre a ferramenta.",
      "Muito bom, parabéns. Aqui utilizo a extensão Genie apontando pra api offline rodando o LM Studio com o modelo Qwen2.5 Coder. Aperto F1 no VScode e ela pega o diff, envia pra api e retorna o commit seguindo as boas práticas.",
      "Depois vou experimentar. Obrigado por compartilhar",
      "A extensão deixa apontar pra uma api customizada no estilo OpenAI, dai é só apontar pro LM Studio.",
      "este modelo usa ollama que tem compatibilidade com OpenAI",
      "Interessante. Esta rodando em qual servidor? Qual infra wsta usando?",
      "Totalmente local, este projeto está sendo desenvolvido com a premissa de ser off-line e preocudado com a privacidade, então os diffs e nenhuma informação será rodada fora do computador do usuário.\nComo ele usar Ollama, se vc quiser hospedar o ollama em algum server e apontar para o servidor, ai é uma decisão do usuário. :P"
    ],
    "audio_path": "/tmp/[PITCH] Treinei um pequeno LLM para escrever commits do Git offline.mp3",
    "summary": {
      "summary": "O artigo descreve a criação de um LLM (Modelo de Linguagem Grande) para gerar mensagens de commit do Git offline. O autor, motivado por preocupações com a privacidade ao usar ferramentas online como o ChatGPT, desenvolveu um modelo local utilizando fine-tuning com o Ollama. Inicialmente, um modelo Mistral de 7B foi utilizado, mas versões menores, baseadas em DeepSeekR1 e Qwen, foram criadas para melhorar a eficiência e o raciocínio. Um script agêntico foi implementado para lidar com contextos maiores, processando os diffs do Git em etapas. O objetivo é fornecer uma ferramenta que gere commits de alta qualidade com ajustes manuais mínimos, garantindo a segurança e a privacidade do trabalho do usuário. Os comentários da comunidade expressam interesse em tutoriais sobre fine-tuning e RAG (Retrieval-Augmented Generation), além de compartilharem outras ferramentas e métodos para gerar commits com IA, como o uso do LM Studio e extensões do VS Code. Alguns usuários questionam o desempenho dos modelos menores em comparação com alternativas online como Claude Sonnet, enquanto outros apreciam a abordagem focada na privacidade e no uso offline.",
      "keywords": [
        "LLM",
        "Git commits",
        "offline",
        "fine-tuning",
        "Ollama",
        "open-source",
        "privacidade"
      ]
    }
  },
  {
    "title": "Percebi recentemente que a linha divisória entre Ganância e Ambição é a sua Competência 🤝",
    "link": "https://www.tabnews.com.br/filipedeschamps/percebi-recentemente-que-a-linha-divisoria-entre-ganancia-e-ambicao-e-a-sua-competencia",
    "content": "Pensa por um momento nisso, porque é algo que afeta os seus projetos ou qualquer iniciativa que queira ter na vida.\nUm exemplo nítido dessa mecânica é pensar em um projeto sensacional, cheio de sofisticações, pensar como seria a versão mais completa desse seu projeto, a última versão dele com todas as features possíveis... e aí partir para executar essa última versão.\nAté aí sem nenhum problema, porque o problema real é onde está a sua Competência para executar essa última versão do projeto.\nOu seja... se você não tem Competência suficiente para executar esta última versão, virou Ganância e você vai se ferrar... ou se tem Competência suficiente, continua sendo Ambição e está tudo certo 🤝\nÉ por isso que recorrentemente você vê pessoas \"dando o passo maior que a perna\" e não conseguindo fazer um projeto subir... e recorrentemente também vê pessoas que, apesar de sonharem com um projeto complexo, escolhem executar o mínimo dele, aquilo que está dentro da sua Competência.\nEntão minha sugestão é: sonhe alto sim, tenha Ambição, mas fique executando próximo da sua Competência, caminhe e evolua ela para conseguir chegar na versão final, passo a passo, porque se você atropelar isso, virou Ganância.",
    "comments": [
      "Discordo um pouco sobre essa ideia de “virar ganância”. No meu caso, houve uma época em que eu não sabia como fazer um projeto X, nem tinha a capacidade técnica para isso. Porém, como era um side project que eu queria ver acontecer, fui lá, corri atrás e aprendi enquanto fazia. Fui evoluindo e aprendendo coisas ao longo do caminho. Acredito fielmente que a única coisa impossível é a impossibilidade e, com isso, vou me virando e fazendo.\nA minha visão sobre Ganância x Ambição é a senguinte:\nse olharmos a “ganância” não apenas como a busca de algo grande sem a competência atual, mas como uma postura em que a pessoa busca crescimento de forma egoísta ou a qualquer custo, muitas vezes ignorando limites ou consequências, muitas vezes com hábitos destrutivos a elas mesmas. Já a “ambição”, no bom sentido, pode ser vista como a vontade de crescer, de realizar algo maior e ir aprendendo ao longo do caminho, sem necessariamente atropelar ninguém ou se cegar para outros valores.\nNo geral eu acredito que a “ambição” envolve esforço e aprendizado constante, não sendo necessariamente “ganância” só porque se deseja algo além do que se domina naquele momento. Além de que a \"ganância\" costuma ser associada a resultados imediatos ou lucros sem ter realmente algo a entregar de valor ou sem devido comprometimento.",
      "Então continuamos a concordar 100%, pois quando você fala:\n\nPorém, como era um side project que eu queria ver acontecer, fui lá, corri atrás e aprendi enquanto fazia. Fui evoluindo e aprendendo coisas ao longo do caminho.\n\nFoi exatamente o que eu recomendei fazer na conclusão final, veja:\n\n...sonhe alto sim, tenha Ambição, mas fique executando próximo da sua Competência, caminhe e evolua ela para conseguir chegar na versão final, passo a passo...\n\nQue, novamente, é exatamente o que você escreveu em:\n\nFui evoluindo e aprendendo coisas ao longo do caminho.\n\nNota que inclusive usamos as mesmas palavra: evoluir e caminho 🤝",
      "Acredito que eu esteja passando por isso nesse exato momento, querendo dar um passo maior que a perna em alguns projetos e não executando nenhum. Muitas vezes querendo buscar a perfeição e em outras não tendo a competência suficiente para chegar onde eu quero.\nObrigado pela mensagem Filipe! 😉",
      "Entendi seu raciocínio. De fato é prudente sabermos dar um passo do tamanho da nossa perna. Só achei que a palavra ambição ganhou uma abordagem puramente positiva enquanto na verdade ela também tem seu lado negativo.\nVocê não concorda que uma pessoa gananciosa também é muito ambiciosa? Por este ponto de vista não existiria uma linha entre ambição e ganância.",
      "Concordo, só que na minha visão, a Ganância faz sombra na Ambição.\nEntão o que pode ter começado com Ambição, pode se transformar em Ganância quando você não tem Competência para executar ou para entregar os resultados que foram acordados.",
      "sinto que as vezes sou ambicioso demais para o meu nível de competência atual, ambicioso ao ponto de só ficar na imaginação mesmo, acho que se eu melhorasse minhas habilidades certamente muitos projetos e aprendizados iriam sair da teoria e se tornarem realidade; acredito que no fim o importante é não termos medo de arriscar, independente dos resultados devemos sempre arriscar (no bom sentido, claro)"
    ],
    "audio_path": "/tmp/Percebi recentemente que a linha divisória entre Ganância e Ambição é a sua Competência 🤝.mp3",
    "summary": {
      "summary": "O artigo explora a tênue linha entre ambição e ganância, argumentando que a competência individual na execução de projetos é o fator determinante. A discussão nos comentários expande essa ideia, com alguns usuários concordando que a falta de competência pode transformar a ambição em ganância, levando ao fracasso. Outros argumentam que buscar projetos além da própria competência pode ser uma oportunidade de aprendizado e crescimento, desde que haja esforço e comprometimento. A ambição desmedida, que ignora limites e consequências, é vista como ganância, enquanto a ambição saudável envolve aprendizado contínuo e respeito pelos outros. A importância de arriscar e aprender com os erros também é mencionada, com a ressalva de que a ambição deve ser equilibrada e não levar a atitudes destrutivas.",
      "keywords": [
        "ganância",
        "ambição",
        "competência",
        "projetos",
        "execução",
        "aprendizado",
        "esforço"
      ]
    }
  },
  {
    "title": "[PITCH] [NEW RELEASE] Atualizações no Tabpitches SELO de vencedor, link para votação e muito mais",
    "link": "https://www.tabnews.com.br/lucianfialho/pitch-new-release-atualizacoes-no-tabpitches",
    "content": "Não sei se você acabou vendo o meu ultimo artigo mas no mês passado trouxe uma proposta de transformar o tabnews em uma especie de Product Hunt.\nResumindo: A idéia central é acabar com um grande problema que temos como desenvolvedores, implementamos todo o código fonte e na hora de publicar nosso projetos sofremos por não saber a parte de marketing e etc. Com isso a idéia é além de incentivar a galera a produzir novos projetos e até mesmo a galera a tirar projetos da gaveta, é ter um local aonde possamos lançar nossos produtos para o mundo de uma maneira mais fácil.\n\nSinto que as vezes acabamos somando um sócio a mais simplesmente por não ter a habilidade de marketing, sensação minha e espero que o tabpitches.com.br ajude a mitigar o postergar essa necessidade.\n\nO feedback de vocês foi realmente fundamental e fiquei muito surpreso com os mais de 60 votos que o projeto teve, inclusive ganhou o projeto do dia :)\nCom isso trouxe algumas atualizações para ajudar a incentivar a galera:\n\n\nSelo de votação, agora todo projeto que for publicado pode colocar um selo de votação para levar a galera para a postagem a fim de conhecer o projeto mais a fundo.\n\nA idéia do selo é a mesma do product hunt levar a galera a conhecer melhor sobre o projeto indo para publicação aonde o maker explica como funciona o produto.\n\n\nBadge de vencedor, agora para os vencedores do dia da semana ou do mês existirá um selo para mostrar que o projeto venceu como projeto do periodo, para trazer um pouco mais sobre a autoridade de ter sido o projeto com mais interações daquele periodo.\n\n\n\n\nPS. É importante que vocês coloquem no link da postagem no campo de fonte o site de vocês, esse link é usado para validar os selos de vencedor.\n\n\nAutomatizei um bot no twitter para galera que quer acompanhar mais de perto os projetos lançados. É bom que se a galera seguir vai ser um outro bom canal de impactar as pessoas com nossos projetos.\n\n\nAgora vamos para o roadmap:\n\nEstou buscando algumas parcerias para começar a premiar os vencedores de alguma forma, pensei em creditos em LLMS e em ferramentas como vercel, aws e etc. Já temos 1 encaminhada, e mais 2 que estamos iniciando conversas, o que é bom :)\nPermitir a visão de maker do ano, se de alguma forma o tabpitches servir como uma catapulta para galera arrumar emprego, seria muito irado.\n\nDe resto por enquanto é isso rapaziada :) Muito obrigado pelo feedback de vocês e qualquer coisa estou nos comentários para gente trocar idéia :)",
    "comments": [
      "Uau, adorei as novidades! 🚀 Os selos e o bot no Twitter estão incríveis. Já pensaram em integrar com outras plataformas, tipo LinkedIn? E esses prêmios, hein? Será que rola incluir mentorias ou vagas exclusivas? Tá ficando show! 👏",
      "Caraca, que maneiro isso! O Tabpitches tá ficando cada vez mais irado, hein? Essa parada do selo de votação é um role irado, vai ajudar muito a galera a divulgar os projetos de um jeito mais fácil.\nMuito maneiro ver uma ideia assim tomando forma e ajudando quem curte desenvolver, mas às vezes trava na parte do marketing. E pô, ganhar projeto do dia com mais de 60 votos? Brabo demais!\nTô doido pra ver as próximas novidades. Bora Tabpitches!",
      "Irado! O conceito é legal e o projeto tá ficando cada vez melhor! Espero lançar algo em breve e o TabPitches será fundamental, certeza! :)",
      "Muito bom! Isso aumenta muito a capacidade do dev que muitas vezes é só código. Bom ter um espaço para novas idéias e aprendizado.",
      "Muito bom!"
    ],
    "audio_path": "/tmp/[PITCH] [NEW RELEASE] Atualizações no Tabpitches SELO de vencedor, link para votação e muito mais.mp3",
    "summary": {
      "summary": "O artigo discute o Tabpitches, uma plataforma que visa auxiliar desenvolvedores no lançamento de seus projetos, superando a dificuldade de marketing. As atualizações incluem selos de votação e badges de vencedor para aumentar a visibilidade e o reconhecimento dos projetos. Um bot no Twitter foi automatizado para divulgar os lançamentos. O roadmap futuro prevê parcerias para oferecer prêmios aos vencedores e a possibilidade de usar a plataforma como vitrine para oportunidades de emprego. Os comentários dos usuários são positivos, elogiando as novidades e o potencial da plataforma para ajudar desenvolvedores a divulgar seus projetos e aprender sobre marketing.",
      "keywords": [
        "Tabpitches",
        "lançamento de produtos",
        "desenvolvedores",
        "marketing",
        "selo de votação",
        "badge de vencedor",
        "projetos open source"
      ]
    }
  },
  {
    "title": "Como estou desenvolvendo uma rede social de futebol do zero: stack, desafios e aprendizados",
    "link": "https://www.tabnews.com.br/modasby/como-estou-desenvolvendo-uma-rede-social-de-futebol-do-zero-stack-desafios-e-aprendizados",
    "content": "Salve pessoal, beleza? meu primeiro post aqui gostaria de compartilhar com vocês meu mais novo projeto, o Futeboxd, uma rede social para criar avaliações de partidas de futebol. Só pra esclarecer isso não é um Pitch(talvez seja um pouco) mas eu quero fazer mais uma descrição técnica dele, da onde saiu a idéia, como eu o construí ele, tecnologias usadas etc.\nSumário:\nPor que eu criei o Futeboxd?\nArquitetura do projeto\nTecnologias usadas\nFuncionalidades do Futeboxd\nFuturo do Futeboxd\nConclusão\nPor que eu criei o Futeboxd?\nA idéia surgiu após eu ler alguns posts no X(antigo Twitter) sobre alguém criar um Letterboxd de futebol. Percebi que não existia um app amplo para avaliar partidas, eu encontrei alguns mas de um nicho bem limitado, como o RateGame que faz exatamente isso mas é limitado apenas a Liga Inglesa, eu então resolvi botar a mão na massa! Além de ser um projeto que eu gostaria de usar, vi nisso uma ótima oportunidade para desenvolver algo com usuários reais, melhorar meu portfólio e, quem sabe, conquistar aquela sonhada vaguinha.\nArquitetura do projeto\nInicialmente eu quebrei a cabeça com isso, a primeira coisa que eu fiz foi procurar uma fonte para buscar dados de partidas, inicialmente encontrei algumas apis mas que eram caras demais pro meu momento. Foi então que encontrei uma api da ESPN, não tem documentação, não é citada em nenhum site deles mas por algum motivo funciona e é totalmente aberta aqui uma doc dela feita pela comunidade, até agora eu não sei se é permitido o uso dela porque ela não é citada em nada da ESPN, mas se der ruim eu tenho uma alternativa: fazer web scraping do site Fbref, o que é permitido por eles mas com um rate limiting.\nAbaixo você pode ver um desenho da arquitetura atual do futeboxd:\n\nSim, microsserviços! Uma das grandes vantagens desse projeto foi que eu cai na real que eu não sabia nada! Eu achava que sabia sobre microsserviços, achava que sabia sobre clean arch mas eu não sabia nada. Só assistir cursos e nunca aplicar na prática não te ensina nada, eu sabia aplicar esses conceitos mas apenas nos projetos dos cursos que eu fiz, quando comecei a desenvolver um projeto do zero eu não consegui aplicar direito esses conhecimentos. Comecei a criar vários serviços, um para usuários outro para reviews outro para likes isso aumentou demais a complexidade do projeto, detalhe: tudo isso pra rodar em uma única VPS! Foi então que eu parei e repensei o projeto inteiro, e escolhi manter do jeito que está, um microsserviço e um monolito, com isso eu consigo escalar o serviço de futebol(o que na minha cabeça vai receber várias requisições), e ao mesmo tempo consigo deixar o monolito principal sem a complexidade que microsserviços introduz. E não podemos esquecer do serviço de atualização de dados de futebol, esse serviço basicamente é um cron job, que busca por partidas de uma liga específica(mais pra baixo detalharei quais ligas estão incluidas no Futeboxd) e cria crons jobs para os horários das partidas, depois atualiza de 5 em 5 minutos até que a partida acabe, eu fiz de uma maneira síncrona e bem espaçada para que não sobrecarregue os servidores da ESPN e eu acabe com um IP bloqueado.\nTecnologias Usadas\nPara esse projeto eu optei por usar Golang nas apis sem qualquer framework(sim, estou escrevendo SQL puro), apesar de eu ser um desenvolvedor Java e estar almejando por uma vaga para trabalhar com Java, esse é um projeto que eu desenvolvi para ser usado por usuários reais, e eu precisava de uma linguagem que consumisse muita pouca memória e como eu estava estudando Golang na época, optei por escolher ele. para o worker eu escolhi o nodejs por motivos de ele ser bastante dinâmico com tipos e a api da ESPN não tem uma estrutura definida, e usar JS ajuda na hora que erros acontecem pela estrutura retornada pela API não ser o que o código estava esperando.\nA lista completa:\n\nServiço de futebol: Golang\nMonolito principal: Golang\nWorker: Nodejs\nBanco de dados: Postgres\nArmazenamento de imagens: Digital ocean spaces(estava usando AWS mas o digital ocean oferece um plano grátis além de ser significamente mais barato)\nEnvio de emails: Resend\nHospedagem: Hostinger com Docker swarm\n\nFuncionalidades do Futeboxd\nAtualmente o Futeboxd conta com funcionalidades básicas de uma rede social, você pode criar reviews, comentar nas reviews de outras pessoas, dar likes, seguir pessoas, fazer pesquisas, além também de ter um feed personalizado e recomendação de pessoas pra seguir com base na sua rede e no time que você torce, recomendando pessoas que torcem para o mesmo time.\nEu me baseei bastance no Tabnews para desenvolver esse projeto, tanto que a parte de autenticação e basicamente copiada daqui, apenas adaptei para o Golang e para o meu caso de uso.\nNa parte de futebol, atualmente tenho um banco de dados com 60 mil partidas desde 2006 sendo atualizado continuamente nas seguintes ligas:\n\nCopa do Brasil\nSupercopa do Brasil\nCampeonato Paulista\nCampeonato Carioca\nCampeonato Gaúcho\nCampeonato Mineiro\nCopa do Nordeste\nChampions League\nEuropa League\nEliminatórias Europa\nCopa do Mundo\nMundial de Clubes\nCopa Libertadores\nCopa Sul-Americana\nCopa América\nPremier League\nEFL Championship\nLa Liga\nCopa do Rei\nLigue One\nBundesliga\nSerie A\nPrimeira Liga\nAmistoso\nEurocopa\nCopa da Liga Inglesa\nEliminatórias América\nCopa da Inglaterra\nCopa da Itália\nSupercopa da Espanha\nCopa da Alemanha\nSuper Copa da UEFA\nRecopa\nMundial de Clubes\nConference League\n\nFuturo do Futeboxd\nEu pretendo apenas deixar esse projeto como um portfólio para eu conseguir uma vaga, e quem sabe se ele tiver uma boa base de usuários fiéis usar um modelo de monetização parecido com o que o Letterboxd usa. Mas mesmo assim eu mantenho uma lista de funções que planejo adicionar ao site:\n\nNotificações via push e email\nFazer comentários em comentários\nSistema de moderação com denúncias e um backoffice\nAdicionar um campo que o usuário pode digitar se ele foi ao estádio ou não, criando um \"diário\" com isso\nCriação de comunidades parecido com o Reddit\nDiscussões ao vivo, como um chat da Twitch para partidas acontecendo ao vivo\nUma melhor categorização das notícias, podendo listar notícias sobre um time especifíco ou sobre um termo\n\nAlém disso, estou considerando deixar o código do Futeboxd aberto no futuro para a comunidade contribuir. A API REST dele já é aberta, mas ainda não existe uma documentação, o que está no meu roadmap para desenvolver.\nConclusão\nO Futeboxd é um projeto que acima de tudo me deu bastante aprendizado sobre desenvolvimento de software, sobre arquitetura, containers, clean code, SQL e sobre Golang que eu era um completo iniciante na linguagem quando comecei o projeto. Hoje, sinto que tenho uma base sólida e uma experiência considerável com ela.\nE pra você que chegou até aqui o projeto já está no ar, Clique aqui",
    "comments": [
      "Excelente trabalho, cara!\nNós do https://sportboxd.com ficamos muito felizes de ter um clone do nosso projeto utilizado como case de estudo, foda demais!\nAcho que seria maneiro falar pra galera de onde veio a inspiração, que você curtiu o nosso trabalho, quis colaborar com a gente mas infelizmente a comunicação não fluiu e por isso você decidiu fazer a sua versão do projeto por conta própria e tudo mais.\nComo não tem ninguém aqui ganhando dinheiro com isso, seria interessante ganharmos pelo menos os créditos por sermos usados como base pro teu case.\nDe qualquer forma seu trabalho tá excepcional, boa sorte na sua jornada meu caro!\nAbraço.",
      "Opa amigo, boa tarde, primeiramente muito obrigado e desculpe por não ter citado o sportboxd como um exemplo, realmente esqueci.\nMas eu não usei o seu projeto como base, a minha ideia veio da mesma fonte que a sua, do twitter, quando vocês postaram sobre o sportboxd eu já estava em um desenvolvimento avançado do futeboxd, na verdade eu me inspirei bastante no letterboxd, tabnews e no plotwist tanto que se você reparar a UI do meu projeto tem elementos e funcionalidades bastante parecidas com eles. Mas perdão eu poderia ter citado vocês e esqueci mesmo.",
      "Tamo junto!\nBoa sorte na sua jornada meu mano, mandou bem demais de qualquer forma\nInclusive, gostei do Plotwist vou usar kkkkkkkkkk lembro de ter visto ele por aqui alguma vez",
      "Wow, muito massa seu site/projeto.\nComo citou aqui não desejar ter ads no APP por enquanto, mas, se desejar ter ads no site, ativa a Upeex.com já poderá cobrir os custos da infra. rs\nSucesso ai no projeto!",
      "opa mano tranquilo, vlw pela recomendação vou dar uma olhada sim!",
      "Que legal cara, parabéns! Gostei muito dos cards das partidas que rolaram, achei bonito. Além dos site todo em si, tem uma experiência amigável.\nSó uma pergunta: Onde você consegue as informações sobre as partidas que acontecem ou aconteceram nos campeonatos?",
      "opa valeu mano!\neu uso a API da ESPN, por exemplo eu consigo pegar as partidas de cada liga nesse endpoint: https://site.api.espn.com/apis/site/v2/sports/soccer/bra.1/scoreboard?lang=pt\nesse por exemplo pega do brasileirão, então eu apenas faço um long polling e normalizo os dados pro meu caso.",
      "Mano eu também tinha criado uma rede social que e tipo um twitter 2 so que sem a toxidade, so que até agora praticamente ninguém se interessou\nhttps://qqpost.netlify.app/home",
      "muito legal mano! é eu também ja fiz um \"twitter 2\" mas rede sociais você precisa fazer uma coisa diferente, porque twitter, instagram, LinkedIn etc já dominam, tentar competir com elas é tempo perdido.",
      "muito legal o seu projeto, deixa o seu contato do linkedin pfv.\nsou gerente de tecnologia em uma empresa de IA e a maioria dos nossos microserviços são em Go.\nconstantemente estou contratando, podemos trocar uma ideia.",
      "Opa, com certeza, adoraria conversar sobre alguma oportunidade.\nhttps://www.linkedin.com/in/giulliano-mendes/",
      "Parabéns pelo excelente projeto! Esse é um nicho com grande potencial de visibilidade e oportunidades de monetização. Além de gerar receita com o Google Ads, você também pode estabelecer parcerias estratégicas com lojas que vendem camisas de times, ampliando ainda mais suas possibilidades de crescimento. Claro, sem desviar o seu foco na área de tecnologia, pois essa experiência agrega muito valor ao seu desenvolvimento profissional.",
      "Muito obrigado pelas dicas, por enquanto não quero usar ads no app mas não descarto essa possibilidade no futuro, e achei muito boa essa ideia sobre estabelecer parcerias com lojas, pode ser uma boa forma de promover o app.",
      "Show de bola(sem trocadilho)!!!\nJá publicou no linkedin? Acredito que não demorará muito até que alguem te chame.\nConsigo enxergar esse projeto facilmente bombando por aí, comece a divulgar nas rodas de amigos, no bar, na faculdade... tem futuro.",
      "Valeu pelo apoio! Ainda não postei, vou postar nos próximos dias, só estou arrumando umas coisas na API pra deixar ele redondo.",
      "Os serviços da Hostinger são de boa? Tu tá satisfeito no geral com eles?\nTo procurando uma alternativa, preço é importante, mas tem que ter qualidade no serviço pra não ficar na mão...\nSucesso pra ti.",
      "Cara, nao tenho nada a reclamar, a vps e o domínio sao da hostinger e até agora estão me atendendo bem, mas ele não tem aquelas funções do ec2 de auto scaling, load balancing, é tudo manual. Em compensação é bem mais barato."
    ],
    "audio_path": "/tmp/Como estou desenvolvendo uma rede social de futebol do zero: stack, desafios e aprendizados.mp3",
    "summary": {
      "summary": "O artigo descreve o desenvolvimento do Futeboxd, uma rede social para avaliações de partidas de futebol. O autor detalha a arquitetura do projeto, que utiliza microsserviços em Golang e Node.js, além de um banco de dados Postgres. A motivação surgiu da ausência de plataformas amplas para avaliar jogos, inspirando-se em projetos como Letterboxd e na API da ESPN para dados de partidas. Os comentários elogiam o projeto, com um usuário mencionando o Sportboxd como inspiração (o que o autor reconhece, mas afirma ter tido a ideia original no Twitter), e outros oferecendo dicas de monetização e divulgação. Alguns usuários compartilham seus próprios projetos similares e trocam experiências sobre desenvolvimento e hospedagem. A discussão demonstra um feedback positivo em relação à iniciativa e um interesse mútuo na área de desenvolvimento de redes sociais.",
      "keywords": [
        "rede social",
        "futebol",
        "desenvolvimento",
        "golang",
        "microserviços",
        "API ESPN",
        "Futeboxd"
      ]
    }
  },
  {
    "title": "[PITCH] BRSAAS - Descobrindo e conectando o ecossistema SaaS brasileiro",
    "link": "https://www.tabnews.com.br/iamjoaovytor/pitch-brsaas-descobrindo-e-conectando-o-ecossistema-saas-brasileiro",
    "content": "Fala, turma! 👋\nCompartilhar com vocês um projeto (ainda MVP) que desenvolvi inspirado em um comentário do @Fiasco durante uma live: ele mencionou que entrava no TabNews especificamente para ver pitches. Percebi que temos vários pitches incríveis de SaaS brasileiros, mas eles acabam se perdendo no feed com o tempo.\nO BRSAAS (https://www.brsaas.dev/) é uma plataforma que reúne e destaca esses pitches, criando um hub centralizado onde podemos descobrir produtos SaaS nacionais. A ideia é simples: facilitar a vida de quem quer acompanhar o que está sendo construído por aqui, conectando fundadores com possíveis investidores, sócios ou early adopters!\nO que ele faz?\n\nLista automaticamente os pitches de SaaS postados no TabNews\nPermite filtrar por data ou popularidade (tabcoins)\nMarca os pitches que você já visitou (não perde nada!)\nEnvia uma newsletter toda sexta com os 5 maiores pitches da semana\nInterface limpa e responsiva, com modo escuro\n\nPor que criei?\nComo desenvolvedor interessado em empreender, sempre me impressiono com a qualidade e quantidade de produtos que a galera brasileira está construindo. Senti falta de um ponto central onde pudéssemos acompanhar facilmente o que está rolando no cenário SaaS nacional e dar mais visibilidade a esses projetos. O BRSAAS nasce com esse propósito, sempre dando os devidos créditos às plataformas onde os pitches foram originalmente postados - por enquanto apenas o TabNews, mas com planos de expandir para outras fontes no futuro.\nComo foi construído?\n\nNext.js 15 com App Router\nTypeScript para type safety\nTailwind CSS para UI\nSupabase para banco de dados\nVercel para deploy\nAPI do TabNews como fonte dos dados\n\nO que vem por aí?\nTenho várias ideias para expandir o projeto:\n\nCategorização dos SaaS (B2B, B2C, etc.)\nDashboard com estatísticas do ecossistema e piches mais acessados\nSistema de feedback e reviews da comunidade\nPerfis para fundadores destacarem seus produtos\nIntegração com outras fontes além do TabNews\n\n(avançando no curso.dev para aprender tudo isso e implementar haha)\nMe ajuda a melhorar!\nComo é um MVP, seu feedback é super importante! Se tiver sugestões de features, melhorias na UI/UX, críticas ou encontrar algum bug, me avisa aqui nos comentários.\nSe curtiu o projeto, dá uma olhada lá e me conta o que achou.\nValeu! 🚀\nPost no X",
    "comments": [
      "bora criar uma convenção?\ncaso o pitcher queira que entrem em contato, ele pode colocar [EMAIL] ou [WHATSAPP], etc., ou sem markdown, dentro da postagem dele, no próprio tabnews. assim, vc capturaria tais dados e colocaria bonitinho no brsaas.\nalém disso, vc pode verificar se o perfil do tabnews dele tem algum github, email, whatsapp, etc., para o sr conseguir incluir isso brsaas.\npoderia incluir até tags. por exemplo, no final da postagem no tabnews, colocaria tags assim, literalmente\ntags: simulado, questões, educação.\nou vc mesmo poderia tentar definir as palavras-chaves sob demanda, usando alguma LLM básica que dá para rodar sem placa de vídeo e no backend.",
      "Bons feedbacks, acho que por enquanto vou tentar incluir manual procurando no post se acho alguma informação. Anexando principalmente no email semanal. Mas já pensando em desenvolver isso para ser automatico, se exigir algum contato, mesmo que seja linkedin, quando eu criar a feature de posts dentro do próprio brsaas.\nSobre as tags mt bom, até sinto falta disso aqui no tabnews, já sugeriram mas a gerencia não passou a frente rsrsrs dar uma estudada sobre.\nVlw manin!",
      "Parabéns pelo projeto, excelente idéia, alem de poder montar um ranking de SaaS com base no TabCoins, um SaaS poderia ficar no topo em caso de um patrocínio, enfim parabéns pelo pela ideia.",
      "bom dia, sr.\nclaramente, essa solução tem uma excelente proposta de valor, pois atingiu um nicho, com um recorte bem definido.\nespero que a comunidade dê maior apoio.\ntalvez um título melhor seria \"criei um ranking de pitches/saas do tabnews\". as pessoas parecem ter maior resistência para ler um post com [PITCH]",
      "obrigado dealmeida! Realmente essa \"tag\" afasta um pouco kkkk",
      "Kkkk.. qual seria ela? Como poderia monetizar? Eses aspirantes a dev se superam dia a dia.",
      "welovetech:\nKkkk.. qual seria ela? Como poderia monetizar? Eses aspirantes a dev se superam dia a dia.\n\ncomo assim? a tag era \"PITCH\".",
      "Excelente iniciativa. apoio total. parabéns",
      "Incrível como essa comunidade produz grandes ideias e produtos em profusão. Parabéns e vamos apoiar esssa ideia, acessando o BRSAAS e divulgando!"
    ],
    "audio_path": "/tmp/[PITCH] BRSAAS - Descobrindo e conectando o ecossistema SaaS brasileiro.mp3",
    "summary": {
      "summary": "O artigo apresenta o BRSAAS, um projeto MVP que visa agregar e destacar pitches de SaaS (Software as a Service) brasileiros postados no TabNews. O objetivo é criar um hub centralizado para facilitar a descoberta de produtos SaaS nacionais, conectando fundadores com potenciais investidores e early adopters. A plataforma lista automaticamente os pitches, permite filtrar por data ou popularidade, marca os pitches já visitados e envia uma newsletter semanal com os principais destaques. O autor descreve a motivação por trás do projeto, astack utilizada e os planos futuros, incluindo categorização dos SaaS, dashboard de estatísticas, sistema de feedback e integração com outras fontes além do TabNews. Nos comentários, os usuários elogiam a iniciativa e oferecem sugestões, como a criação de uma convenção para incluir informações de contato nos pitches, a implementação de tags e a possibilidade de patrocínio para destaque. Alguns comentam sobre a resistência inicial ao título com a tag \"[PITCH]\" e o potencial de monetização da plataforma. A comunidade demonstra apoio à ideia, reconhecendo o valor da iniciativa para o ecossistema SaaS brasileiro.",
      "keywords": [
        "SaaS",
        "TabNews",
        "BRSAAS",
        "pitches",
        "ecossistema brasileiro",
        "MVP",
        "comunidade"
      ]
    }
  },
  {
    "title": "Laravel: O framework FullStack",
    "link": "https://www.tabnews.com.br/IgorAntunes21/laravel-o-framework-fullstack",
    "content": "Introdução\nO Laravel é um framework PHP de código aberto desenvolvido por Taylor Otwell, lançado em 9 de junho de 2011. Sua proposta é oferecer um conjunto abrangente de ferramentas que facilitam o desenvolvimento de aplicações web modernas de forma simplificada. Porém, abordarei o Laravel sob a perspectiva do desenvolvimento Fullstack, visando em expor suas principais tecnologias para criação de interfaces, como Blade Templates, Livewire e Inertia.js. Embora o Laravel também seja amplamente utilizado na construção de APIs, mas quero mostrar a sua capacidade de oferecer soluções completas para o frontend e backend dentro do mesmo ecossistema.\nLaravel O framework FullStack\nO Laravel é altamente popular, e um dos motivos é por ser um framework fullstack. Com um sistema de roteamento pronto para uso, ele permite renderizar requisições diretamente no frontend. Essa renderização pode ser feita através de Blade Templates ou usando uma tecnologia SPA (Single Page Application) como o Inertia.js. A própria documentação recomenda que o Laravel seja utilizado dessa maneira.\nTecnologias Back-end Poderosas no Laravel\nO Laravel oferece uma gama de ferramentas para a parte Back-end. Permitindo, assim, estruturar de forma organizada a lógica do servidor.\nRotas e Controladores\nNo Laravel, o gerenciamento das requisições HTTP é feito por meio do sistema de rotas. O roteamento permite mapear as URLs para ações específicas. As rotas podem ser construídas dentro do arquivo routes/web.php para aplicações que utilizam as renderizações ou no routes/api.php para APIs.\nExemplo de uma rota simples:\nuse App\\Http\\Controllers\\UserController;\nuse Illuminate\\Support\\Facades\\Route;\n\nRoute::get('/users', [UserController::class, 'index']);\n\nDentro do arquivo routes/web.php, definimos que requisição do tipo GET para a URL /users será tratada pelo método index que faz parte do Controller chamado de UserController.\nE, com isso, os controladores organizam a lógica do Back-end, fazendo com que cada requisição, que terá o seu verbo HTTP definido, seja processada de forma modular e reaproveitável.\nExemplo de um controlador básico:\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\n\nclass UserController extends Controller\n{\n    public function index()\n    {\n        $users = User::all();\n        return view('users.index', ['users' => $users]);\n    }\n}\n\nEsse método busca todos os usuários e os passa para uma view, que será renderizada no Front-end.\n\nModels e Eloquent ORM\nNo Laravel, a camada de dados é gerenciada pelos Models e pelo Eloquent ORM (Object-Relational Mapping). O Eloquent simplifica a interação com o banco de dados, permitindo consultas mais legíveis e organizadas.\nCada model representa uma tabela do banco de dados e contém métodos para interagir com os dados dessa tabela.\nExemplo de um model User:\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass User extends Model\n{\n    use HasFactory;\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    // Método para filtrar usuários ativos\n    public function scopeActive($query)\n    {\n        return $query->where('active', true);\n    }\n\n    // Método para ordenar por nome\n    public function scopeOrderByName($query)\n    {\n        return $query->orderBy('name');\n    \n\nAgora, para buscar usuários ativos ordenados pelo nome, basta chamar:\n$users = User::active()->orderByName()->get();\n\nO Laravel ainda conta com migrations, que permitem gerenciar a estrutura do banco de dados de forma programática e versionada, facilitando a colaboração em equipes e a automação de mudanças na base de dados.\nTecnologias Front-end! Sensacionais.\nPHP e Blade\nO laravel te permite construir o front-end usando o próprio PHP. Há vários aplicativos que renderizam usando HTML e incorporam com tags <?php ?> no meio. Por exemplo, para listar dados recuperados de um banco de dados. No laravel, essa abordagem ainda continua, com a utilização das views e blade. O blade é uma linguagem de template que trouxe uma sintaxe curta e conveniente para exibir os dados. Basicamente, é enviado um documento HTML inteiramente novo do servidor e a página inteira é renderizada novamente pelo navegador.\nExemplo de um blade básico:\n//Exibindo o nome do usuário\n<div>\n    @foreach ($users as $user)\n       Hello, {{ $user->name }} <br />\n    @endforeach\n</div>\n\n\nLivewire 💓\nCom a proposta de se parecer com frameworks JavaScript, como o Vue ou o React, o Livewire é um framework para criar front-end no Laravel de forma dinâmica. O livewire se baseia em componentes que renderizam uma parte da sua UI, que contará com métodos e dados que podem ser acionados e, assim, interage com o front-end do seu aplicativo. É sensacional, pois você constrói o front-end permanecendo no conforto do Laravel. E, em casos que tenha necessidade de acrescentar códigos JavaScript, desenvolvedores livewire utilizam o Alpine.js para isso.\nExemplo de um componente Counter usando o livewire:\n<?php\n// Criando um componente counter que irá interagir com o meu front-end\nnamespace App\\Http\\Livewire;\n \nuse Livewire\\Component;\n \nclass Counter extends Component\n{\n    public $count = 0;\n \n    public function increment()\n    {\n        $this->count++;\n    }\n \n    public function render()\n    {\n        return view('livewire.counter');\n    }\n}\n\n// Nesse outro arquivo, será exibido o meu front-end, expondo esses \n// métodos que poderão ser invocados. Através do 'wire', fazemos essa conexão..\n<div>\n    <button wire:click=\"increment\">+</button>\n    <h1>{{ $count }}</h1>\n</div>\n\nUsando Frameworks JS\nClaro que com toda a popularidade que os Frameworks JavaScript têm, muitos desenvolvedores irão querer utilizá-los para a construção do front-end de suas aplicações. O Laravel também resolve isso. Para resolver problemas como roteamento do lado do cliente, autenticação, o Laravel oferece o Inertia.\nInertia\nO Inertia preenche a lacuna entre seu aplicativo Laravel e seu front-end React ou Vue, permitindo que você desfrute das funcionalidades do seu Framework JavaScript como as funcionalidade de rotas e controladores do Laravel, para que ocorra “hidratação” de dados e autenticação, tudo dentro do mesmo projeto. Ao injetar o Inertia no seu projeto, ocorrerá só uma mudança: você terá que retornar uma página Inertia no lugar do seu modelo blade. A seguir, mostrarei um exemplo usando o Laravel e Vue.js.\nExemplo de um Controller Users :\nclass UsersController\n{\n    public function index()\n    {\n        $users = User::active() \n            ->orderByName()\n            ->get(['id', 'name', 'email']); \n\n        return Inertia::render('Users', [\n            'users' => $users\n        ]);\n    }\n}\n\n\nEsse método busca todos os usuários ativos, ordenando pelo nome e retornando apenas os campos especificados e renderiza para o Inertia enviando a variável $users que conterá os dados desses usuários.\n\n// Renderização com Vue.js + Inertia\n<script setup>\n  // Importa o componente Layout para estruturar a página\n  import Layout from './Layout'\n\n  // Importa os componentes Link e Head do Inertia.js para navegação e SEO\n  import { Link, Head } from '@inertiajs/vue3'\n\n  // Define as propriedades recebidas do backend (neste caso, um array de usuários)\n  defineProps({ users: Array })\n</script>\n\n<template>\n  <!-- Usa o componente Layout como estrutura principal da página -->\n  <Layout>\n    <!-- Define o título da página usando o componente Head do Inertia.js -->\n    <Head title=\"Users\" />\n\n    <!-- Itera sobre a lista de usuários recebida como propriedade -->\n    <div v-for=\"user in users\" :key=\"user.id\">\n      <Link :href=\"`/users/${user.id}`\">\n        {{ user.name }}\n      </Link>\n     \n      <div>{{ user.email }}</div>\n    </div>\n  </Layout>\n</template>\n\n\nEsse código em Vue.js importa os componentes de layout, Link e Head do Inertia e define as propriedades recebidas do back-end (neste caso, um array de usuários). Depois usa o componente Layout como estrutura principal da página, define o título usando o componente Head do Inertia e itera a lista de usuários recebida como propriedade.\n\nKits inicias do Laravel\nO Laravel oferece uma ferramenta chamada \"Starter Kit\", ou Kit Inicial, que inclui recursos essenciais como autenticação e gerenciamento de usuários. Esses kits proporcionam uma vantagem significativa no início do desenvolvimento, pois automatizam boa parte do processo que normalmente seria necessário construir manualmente. Embora o uso desses kits não seja obrigatório, eles são uma ferramenta valiosa para acelerar o desenvolvimento, permitindo que nós, desenvolvedores, se concentrem em outras partes do projeto sem precisar começar do zero.\nConclusão\nGostando ou não, o Laravel é um framework PHP extremamente versátil e robusto, permitindo a construção de aplicações fullstack, construção de API, e vem com diversas abordagens para o front-end. Desde o uso simples com o Blade até soluções mais modernas como Livewire e Inertia.js. Além disso, conta com muitos processos que facilitam a vida do desenvolvedor como, por exemplo, os Kits Iniciais.\nSeja utilizando apenas PHP com Blade, criando interfaces dinâmicas com Livewire ou aproveitando toda a potência de frameworks JavaScript como Vue e React com Inertia, o Laravel proporciona um ecossistema muito agradável para o desenvolvimento web moderno. Sendo assim, o Laravel acaba sendo uma excelente opção para quem busca produtividade, organização e eficiência no desenvolvimento de aplicações web.",
    "comments": [
      "Muito boa essa postagem, parabéns. Amo o laravel demais, ele é muito completo mesmo.",
      "O Laravel é um mundo a parte, tem um ecossistema que tende a crescer muito ainda. Muito animado pelas novidades...",
      "Vale um post também sobre a TALL Stack (Tailwind, AlpineJS, Laravel Livewire), com ênfase na Tall Stack UI, desenvolvido por um brasileiro, nosso colega AJ do canal EuSeiPHP... Minha principal stack é essa. O ecossistema é gigantesco, tem todo tipo de ferramenta e nos ajuda no desenvolvimento do dia a dia. Top demais, só não curti mais a postagem, pois não tem como.",
      "to pensando em aprender o livewire também pra ficar expert em laravel e todo seu ecossistema. sou do time inertia/vue atualmente, acha que vale a pena?",
      "Vale e muito. Livewire é um mundo à parte, tem muita coisa também. Muita integração com AlpineJs, e agora com o próprio vanilla js. Dá uma conferida na documentação que você aprende facilmente. Atualmente deixei de usar os controllers e passei a adotar componentes livewire full page, dessa forma a reatividade fica exatamente como a feita com inertia.",
      "Também estou desenvolvendo uma aplicação com Livewire. Confesso que fiquei com pouco de receio inicialmente... Porém, cara, quando você vai desenvolvendo seguindo a documentação, e percebe o quão prático fica, você não vai querer mais largar. Principalmente para aplicações mais simples, não há motivo de encher de várias tecnologias. O Laravel e todo seu ecossistema foca em simplicidade, e, de fato, o simples funciona.",
      "Eu estudei bastante antes de começar a utilizar Livewire nos meus projetos. Eu queria a questão da reatividade, mas ainda não tinha confiança. Aí quando vi que funcionava bem comecei a usar os componentes separados. Tinha um pé atrás com full page components, mas esse ano comecei a utilizar e tem sido muito bom.",
      "Ótimo artigo! Laravel sem dúvidas é o framework mais completo do mercado, uma pena que muitos o julguem antecipadamente só por utilizar PHP",
      "Na minha opinião Yii2 é bem mais completo que Laracel, esse último tem um marketing",
      "Laravel é um bom framework, cheguei a testar algum tempo anos atrás, mas o que me incomoda é o pattern de ActiveModel do Eloquent. Eu sei que há como usar Doctrine ao invés do Eloquent, mas não é uma coisa tão simples quanto poderia ser.",
      "Eu sou de um mundo totalmente a parte do PHP e queria entender mais.\nComo que eu hospedo esse tipo de aplicação?\nPorque quando tentei usar o Laravel, estudei bem pouco ele, eu entendi que você tem um front (LiveWire no meu caso) e um back (PHP)\nÉ possível que separá-los? É bem burra minha pergunta eu imagino kkk.\nHoje eu, por exemplo, trabalho com React e no back eu uso Python.\nMas pelo que eu percebi o Laravel já cria, por exemplo, sistema de login e etc... o que me parece muito útil.",
      "é sim possível separar, so usar o sanctum e criar sua api com ele. ai vc pode consumir ela como quiser na web ou apps nativos.",
      "O Laravel \"propõe\" uma experiencia completa misturando front+backend, mas você não é obrigado a adotar.\nPor exemplo, eu tenho um sistema (bem complexo inclusive) que roda o backend todo em PHP, e o front-end parte é HTML + Ajax (dentro das proprias views do Laravel), e parte é Angular (hospedado a parte do Laravel) que comunica com a API que fiz no Laravel.",
      "Você pode criar tudo junto (monolito) front e back, livewire, blade, inertia (react e vue) por exemplo. Ou você pode criar uma API para ser consumida pelo seu front separado, app mobile por exemplo.\nO Laravel possui vários starter kits que já deixam prontos a parte de autenticação e um dashboard básico pra você customizar, e é sim muito útil, inclusive tem novos starter kits agora lançados no Laravel 12 com react e vue.",
      "Boa resposta, man! Sobre a API, dá uma olhada no Sanctum do Laravel.\nSegue o link: Sanctum API",
      "Exato, esqueça JWT e afins, o Sanctum resolve sua vida de maneira incrivelmente simples. Só não tinha citado, pois não é obrigatório usar, pode ser uma api pública também. Laravel + comunidade PHP = sucesso"
    ],
    "audio_path": "/tmp/Laravel: O framework FullStack.mp3",
    "summary": {
      "summary": "O artigo discute o Laravel como um framework fullstack, explorando suas capacidades tanto no backend (rotas, controladores, models, Eloquent ORM) quanto no frontend (Blade, Livewire, Inertia.js). A discussão nos comentários demonstra um apreço geral pela versatilidade e completude do Laravel, com alguns usuários destacando o ecossistema crescente e a facilidade de uso, especialmente com Livewire e Alpine.js. Há uma menção de um framework concorrente (Yii2), e um usuário levanta a questão do padrão ActiveModel do Eloquent. A possibilidade de separar frontend e backend é abordada, com sugestões de uso do Sanctum para APIs. Em resumo, a comunidade demonstra entusiasmo pelo Laravel como ferramenta para desenvolvimento web completo e eficiente.",
      "keywords": [
        "Laravel",
        "Fullstack",
        "PHP",
        "Livewire",
        "Inertia.js",
        "Blade Templates",
        "Frontend"
      ]
    }
  }
]